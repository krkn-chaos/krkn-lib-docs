Search.setIndex({"docnames": ["k8s", "k8s.krkn_kubernetes", "models", "models.k8s", "models.k8s.models", "models.telemetry", "models.telemetry.models", "modules", "telemetry", "telemetry.krkn_telemetry", "tests", "tests.base_test", "tests.test_krkn_kubernetes", "tests.test_krkn_telemetry", "tests.test_krkn_telemetry_models", "tests.test_utils", "utils", "utils.functions", "utils.safe_logger"], "filenames": ["k8s.rst", "k8s.krkn_kubernetes.rst", "models.rst", "models.k8s.rst", "models.k8s.models.rst", "models.telemetry.rst", "models.telemetry.models.rst", "modules.rst", "telemetry.rst", "telemetry.krkn_telemetry.rst", "tests.rst", "tests.base_test.rst", "tests.test_krkn_kubernetes.rst", "tests.test_krkn_telemetry.rst", "tests.test_krkn_telemetry_models.rst", "tests.test_utils.rst", "utils.rst", "utils.functions.rst", "utils.safe_logger.rst"], "titles": ["k8s package", "k8s.krkn_kubernetes module", "models package", "models.k8s package", "models.k8s.models module", "models.telemetry package", "models.telemetry.models module", "Krkn Foundation Library", "telemetry package", "telemetry.krkn_telemetry module", "tests package", "tests.base_test module", "tests.test_krkn_kubernetes module", "tests.test_krkn_telemetry module", "tests.test_krkn_telemetry_models module", "tests.test_utils module", "utils package", "utils.functions module", "utils.safe_logger module"], "terms": {"krkn_kubernet": [0, 7], "k8": [2, 7], "submodul": [2, 7], "apirequestexcept": [2, 3, 4], "chaosengin": [2, 3, 4], "chaosresult": [2, 3, 4], "contain": [2, 3, 4], "litmuschaosobject": [2, 3, 4], "pvc": [2, 3, 4], "pod": [2, 3, 4], "volum": [2, 3, 4], "volumemount": [2, 3, 4], "telemetri": [2, 7], "chaosruntelemetri": [2, 5, 6], "nodeinfo": [2, 5, 6], "scenariotelemetri": [2, 5, 6], "__init__": [3, 4, 5, 6, 16, 18], "enginestatu": [3, 4], "expstatu": [3, 4], "failstep": [3, 4], "verdict": [3, 4], "imag": [3, 4], "name": [3, 4, 18], "readi": [3, 4], "group": [3, 4], "kind": [3, 4], "namespac": [3, 4], "plural": [3, 4], "version": [3, 4], "capac": [3, 4], "podnam": [3, 4], "volumenam": [3, 4], "nodenam": [3, 4], "podip": [3, 4], "pvcname": [3, 4], "mountpath": [3, 4], "except": 4, "base": [4, 6, 18], "class": [4, 6, 18], "str": [4, 6, 18], "data": [4, 18], "hold": 4, "inform": 4, "regard": 4, "object": [4, 6, 18], "none": [4, 6, 18], "list": [4, 6], "bool": 4, "fals": 4, "custom": 4, "litmu": 4, "project": 4, "persist": 4, "claim": 4, "mount": 4, "cloud_infrastructur": [5, 6], "kubernetes_objects_count": [5, 6], "network_plugin": [5, 6], "node_count": [5, 6], "node_info": [5, 6], "run_uuid": [5, 6], "scenario": [5, 6], "to_json": [5, 6], "architectur": [5, 6], "instance_typ": [5, 6], "kernel_vers": [5, 6], "kubelet_vers": [5, 6], "node_typ": [5, 6], "os_vers": [5, 6], "endtimestamp": [5, 6], "exitstatu": [5, 6], "paramet": [5, 6], "parametersbase64": [5, 6], "starttimestamp": [5, 6], "json_object": 6, "built": 6, "function": [6, 7, 16], "ani": 6, "unknown": 6, "alia": 6, "dict": 6, "int": 6, "0": 6, "cluster": 6, "node": 6, "metadata": 6, "float": 6, "packag": [7, 18], "modul": 7, "content": 7, "model": 7, "subpackag": 7, "krkn_telemetri": [7, 8], "test": 7, "base_test": [7, 10], "test_krkn_kubernet": [7, 10], "test_krkn_telemetri": [7, 10], "test_krkn_telemetry_model": [7, 10], "test_util": [7, 10], "util": 7, "safe_logg": [7, 16], "safelogg": [7, 16, 18], "close": [16, 18], "error": [16, 18], "info": [16, 18], "log_file_nam": [16, 18], "warn": [16, 18], "write_work": [16, 18], "filenam": 18, "write_mod": 18, "provid": 18, "mechan": 18, "thread": 18, "safe": 18, "log": 18, "initi": 18, "option": 18, "write": 18, "mode": 18, "default": 18, "i": 18, "w": 18, "otherwis": 18, "work": 18, "wrapper": 18, "around": 18, "The": 18, "doubl": 18, "meant": 18, "forc": 18, "file": 18, "method": 18, "depend": 18, "param": 18, "behav": 18, "simpl": 18, "logger": 18, "properti": 18}, "objects": {"": [[2, 0, 0, "-", "models"]], "models": [[3, 0, 0, "-", "k8s"], [5, 0, 0, "-", "telemetry"]], "models.k8s": [[4, 0, 0, "-", "models"]], "models.k8s.models": [[4, 1, 1, "", "ApiRequestException"], [4, 2, 1, "", "ChaosEngine"], [4, 2, 1, "", "ChaosResult"], [4, 2, 1, "", "Container"], [4, 2, 1, "", "LitmusChaosObject"], [4, 2, 1, "", "PVC"], [4, 2, 1, "", "Pod"], [4, 2, 1, "", "Volume"], [4, 2, 1, "", "VolumeMount"]], "models.k8s.models.ChaosEngine": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "engineStatus"], [4, 4, 1, "", "expStatus"]], "models.k8s.models.ChaosResult": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "failStep"], [4, 4, 1, "", "verdict"]], "models.k8s.models.Container": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "image"], [4, 4, 1, "", "name"], [4, 4, 1, "", "ready"], [4, 4, 1, "", "volumeMounts"]], "models.k8s.models.LitmusChaosObject": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "group"], [4, 4, 1, "", "kind"], [4, 4, 1, "", "name"], [4, 4, 1, "", "namespace"], [4, 4, 1, "", "plural"], [4, 4, 1, "", "version"]], "models.k8s.models.PVC": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "capacity"], [4, 4, 1, "", "name"], [4, 4, 1, "", "namespace"], [4, 4, 1, "", "podNames"], [4, 4, 1, "", "volumeName"]], "models.k8s.models.Pod": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "containers"], [4, 4, 1, "", "name"], [4, 4, 1, "", "namespace"], [4, 4, 1, "", "nodeName"], [4, 4, 1, "", "podIP"], [4, 4, 1, "", "volumes"]], "models.k8s.models.Volume": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "name"], [4, 4, 1, "", "pvcName"]], "models.k8s.models.VolumeMount": [[4, 3, 1, "", "__init__"], [4, 4, 1, "", "mountPath"], [4, 4, 1, "", "name"]], "models.telemetry": [[6, 0, 0, "-", "models"]], "models.telemetry.models": [[6, 2, 1, "", "ChaosRunTelemetry"], [6, 2, 1, "", "NodeInfo"], [6, 2, 1, "", "ScenarioTelemetry"]], "models.telemetry.models.ChaosRunTelemetry": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "cloud_infrastructure"], [6, 4, 1, "", "kubernetes_objects_count"], [6, 4, 1, "", "network_plugins"], [6, 4, 1, "", "node_count"], [6, 4, 1, "", "node_infos"], [6, 4, 1, "", "run_uuid"], [6, 4, 1, "", "scenarios"], [6, 3, 1, "", "to_json"]], "models.telemetry.models.NodeInfo": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "architecture"], [6, 4, 1, "", "instance_type"], [6, 4, 1, "", "kernel_version"], [6, 4, 1, "", "kubelet_version"], [6, 4, 1, "", "node_type"], [6, 4, 1, "", "os_version"]], "models.telemetry.models.ScenarioTelemetry": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "endTimeStamp"], [6, 4, 1, "", "exitStatus"], [6, 4, 1, "", "parameters"], [6, 4, 1, "", "parametersBase64"], [6, 4, 1, "", "scenario"], [6, 4, 1, "", "startTimeStamp"]], "utils": [[18, 0, 0, "-", "safe_logger"]], "utils.safe_logger": [[18, 2, 1, "", "SafeLogger"]], "utils.safe_logger.SafeLogger": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "close"], [18, 3, 1, "", "error"], [18, 3, 1, "", "info"], [18, 5, 1, "", "log_file_name"], [18, 3, 1, "", "warning"], [18, 3, 1, "", "write_worker"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"k8": [0, 1, 3, 4], "packag": [0, 2, 3, 5, 8, 10, 16], "submodul": [0, 3, 5, 8, 10, 16], "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "content": [0, 2, 3, 5, 8, 10, 16], "krkn_kubernet": 1, "model": [2, 3, 4, 5, 6], "subpackag": 2, "telemetri": [5, 6, 8, 9], "krkn": 7, "foundat": 7, "librari": 7, "krkn_telemetri": 9, "test": [10, 11, 12, 13, 14, 15], "base_test": 11, "test_krkn_kubernet": 12, "test_krkn_telemetri": 13, "test_krkn_telemetry_model": 14, "test_util": 15, "util": [16, 17, 18], "function": 17, "safe_logg": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"k8s package": [[0, "k8s-package"]], "Submodules": [[0, "submodules"], [3, "submodules"], [5, "submodules"], [8, "submodules"], [10, "submodules"], [16, "submodules"]], "Module contents": [[0, "module-contents"], [2, "module-models"], [3, "module-models.k8s"], [5, "module-models.telemetry"], [8, "module-contents"], [10, "module-contents"], [16, "module-contents"]], "k8s.krkn_kubernetes module": [[1, "k8s-krkn-kubernetes-module"]], "models package": [[2, "models-package"]], "Subpackages": [[2, "subpackages"]], "models.k8s package": [[3, "models-k8s-package"]], "models.k8s.models module": [[4, "module-models.k8s.models"]], "models.telemetry package": [[5, "models-telemetry-package"]], "models.telemetry.models module": [[6, "module-models.telemetry.models"]], "Krkn Foundation Library": [[7, "krkn-foundation-library"]], "telemetry package": [[8, "telemetry-package"]], "telemetry.krkn_telemetry module": [[9, "telemetry-krkn-telemetry-module"]], "tests package": [[10, "tests-package"]], "tests.base_test module": [[11, "tests-base-test-module"]], "tests.test_krkn_kubernetes module": [[12, "tests-test-krkn-kubernetes-module"]], "tests.test_krkn_telemetry module": [[13, "tests-test-krkn-telemetry-module"]], "tests.test_krkn_telemetry_models module": [[14, "tests-test-krkn-telemetry-models-module"]], "tests.test_utils module": [[15, "tests-test-utils-module"]], "utils package": [[16, "utils-package"]], "utils.functions module": [[17, "utils-functions-module"]], "utils.safe_logger module": [[18, "module-utils.safe_logger"]]}, "indexentries": {"models": [[2, "module-models"]], "module": [[2, "module-models"], [3, "module-models.k8s"], [4, "module-models.k8s.models"], [5, "module-models.telemetry"], [6, "module-models.telemetry.models"], [18, "module-utils.safe_logger"]], "models.k8s": [[3, "module-models.k8s"]], "apirequestexception": [[4, "models.k8s.models.ApiRequestException"]], "chaosengine (class in models.k8s.models)": [[4, "models.k8s.models.ChaosEngine"]], "chaosresult (class in models.k8s.models)": [[4, "models.k8s.models.ChaosResult"]], "container (class in models.k8s.models)": [[4, "models.k8s.models.Container"]], "litmuschaosobject (class in models.k8s.models)": [[4, "models.k8s.models.LitmusChaosObject"]], "pvc (class in models.k8s.models)": [[4, "models.k8s.models.PVC"]], "pod (class in models.k8s.models)": [[4, "models.k8s.models.Pod"]], "volume (class in models.k8s.models)": [[4, "models.k8s.models.Volume"]], "volumemount (class in models.k8s.models)": [[4, "models.k8s.models.VolumeMount"]], "__init__() (models.k8s.models.chaosengine method)": [[4, "models.k8s.models.ChaosEngine.__init__"]], "__init__() (models.k8s.models.chaosresult method)": [[4, "models.k8s.models.ChaosResult.__init__"]], "__init__() (models.k8s.models.container method)": [[4, "models.k8s.models.Container.__init__"]], "__init__() (models.k8s.models.litmuschaosobject method)": [[4, "models.k8s.models.LitmusChaosObject.__init__"]], "__init__() (models.k8s.models.pvc method)": [[4, "models.k8s.models.PVC.__init__"]], "__init__() (models.k8s.models.pod method)": [[4, "models.k8s.models.Pod.__init__"]], "__init__() (models.k8s.models.volume method)": [[4, "models.k8s.models.Volume.__init__"]], "__init__() (models.k8s.models.volumemount method)": [[4, "models.k8s.models.VolumeMount.__init__"]], "capacity (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.capacity"]], "containers (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.containers"]], "enginestatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.engineStatus"]], "expstatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.expStatus"]], "failstep (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.failStep"]], "group (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.group"]], "image (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.image"]], "kind (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.kind"]], "models.k8s.models": [[4, "module-models.k8s.models"]], "mountpath (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.mountPath"]], "name (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.name"]], "name (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.name"]], "name (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.name"]], "name (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.name"]], "name (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.name"]], "name (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.name"]], "namespace (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.namespace"]], "namespace (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.namespace"]], "namespace (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.namespace"]], "nodename (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.nodeName"]], "plural (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.plural"]], "podip (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.podIP"]], "podnames (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.podNames"]], "pvcname (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.pvcName"]], "ready (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.ready"]], "verdict (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.verdict"]], "version (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.version"]], "volumemounts (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.volumeMounts"]], "volumename (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.volumeName"]], "volumes (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.volumes"]], "models.telemetry": [[5, "module-models.telemetry"]], "chaosruntelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ChaosRunTelemetry"]], "nodeinfo (class in models.telemetry.models)": [[6, "models.telemetry.models.NodeInfo"]], "scenariotelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ScenarioTelemetry"]], "__init__() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.__init__"]], "__init__() (models.telemetry.models.nodeinfo method)": [[6, "models.telemetry.models.NodeInfo.__init__"]], "__init__() (models.telemetry.models.scenariotelemetry method)": [[6, "models.telemetry.models.ScenarioTelemetry.__init__"]], "architecture (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.architecture"]], "cloud_infrastructure (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.cloud_infrastructure"]], "endtimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.endTimeStamp"]], "exitstatus (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.exitStatus"]], "instance_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.instance_type"]], "kernel_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kernel_version"]], "kubelet_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kubelet_version"]], "kubernetes_objects_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.kubernetes_objects_count"]], "models.telemetry.models": [[6, "module-models.telemetry.models"]], "network_plugins (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.network_plugins"]], "node_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_count"]], "node_infos (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_infos"]], "node_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.node_type"]], "os_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.os_version"]], "parameters (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parameters"]], "parametersbase64 (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parametersBase64"]], "run_uuid (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.run_uuid"]], "scenario (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.scenario"]], "scenarios (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.scenarios"]], "starttimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.startTimeStamp"]], "to_json() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.to_json"]], "safelogger (class in utils.safe_logger)": [[18, "utils.safe_logger.SafeLogger"]], "__init__() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.__init__"]], "close() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.close"]], "error() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.error"]], "info() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.info"]], "log_file_name (utils.safe_logger.safelogger property)": [[18, "utils.safe_logger.SafeLogger.log_file_name"]], "utils.safe_logger": [[18, "module-utils.safe_logger"]], "warning() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.warning"]], "write_worker() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.write_worker"]]}})