Search.setIndex({"docnames": ["k8s", "k8s.krkn_kubernetes", "models", "models.k8s", "models.k8s.models", "models.telemetry", "models.telemetry.models", "modules", "ocp", "ocp.krkn_openshift", "telemetry", "telemetry.k8s", "telemetry.k8s.krkn_telemetry_kubernetes", "telemetry.ocp", "telemetry.ocp.krkn_telemetry_openshift", "utils", "utils.functions", "utils.safe_logger"], "filenames": ["k8s.rst", "k8s.krkn_kubernetes.rst", "models.rst", "models.k8s.rst", "models.k8s.models.rst", "models.telemetry.rst", "models.telemetry.models.rst", "modules.rst", "ocp.rst", "ocp.krkn_openshift.rst", "telemetry.rst", "telemetry.k8s.rst", "telemetry.k8s.krkn_telemetry_kubernetes.rst", "telemetry.ocp.rst", "telemetry.ocp.krkn_telemetry_openshift.rst", "utils.rst", "utils.functions.rst", "utils.safe_logger.rst"], "titles": ["k8s package", "k8s.krkn_kubernetes module", "models package", "models.k8s package", "models.k8s.models module", "models.telemetry package", "models.telemetry.models module", "Krkn Foundation Library", "ocp package", "ocp.krkn_openshift module", "telemetry package", "telemetry.k8s package", "telemetry.k8s.krkn_telemetry_kubernetes module", "telemetry.ocp package", "telemetry.ocp.krkn_telemetry_openshift module", "utils package", "utils.functions module", "utils.safe_logger module"], "terms": {"krkn_kubernet": [0, 7], "krknkubernet": [0, 1, 7, 9, 12], "__init__": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17], "api_cli": [0, 1], "apply_yaml": [0, 1], "apps_api": [0, 1], "archive_and_get_path_from_pod": [0, 1], "batch_cli": [0, 1], "check_if_namespace_exist": [0, 1], "check_if_pod_exist": [0, 1], "check_if_pvc_exist": [0, 1], "check_namespac": [0, 1], "cli": [0, 1, 9], "collect_cluster_ev": [0, 1], "create_job": [0, 1], "create_manifestwork": [0, 1], "create_pod": [0, 1], "custom_object_cli": [0, 1], "delete_daemonset": [0, 1], "delete_deploy": [0, 1], "delete_file_from_pod": [0, 1], "delete_job": [0, 1], "delete_manifestwork": [0, 1], "delete_namespac": [0, 1], "delete_pod": [0, 1], "delete_replicaset": [0, 1], "delete_servic": [0, 1], "delete_statefulset": [0, 1], "dyn_client": [0, 1], "exec_cmd_in_pod": [0, 1], "find_kraken_nod": [0, 1], "get_all_kubernetes_object_count": [0, 1], "get_all_pod": [0, 1], "get_all_replicaset": [0, 1], "get_all_servic": [0, 1], "get_all_statefulset": [0, 1], "get_api_resources_by_group": [0, 1], "get_archive_volume_from_pod_work": [0, 1], "get_containers_in_pod": [0, 1], "get_daemonset": [0, 1], "get_deployment_n": [0, 1], "get_deployment_readi": [0, 1], "get_host": [0, 1], "get_job_statu": [0, 1], "get_kubeconfig_path": [0, 1], "get_kubernetes_core_objects_count": [0, 1], "get_kubernetes_custom_objects_count": [0, 1], "get_litmus_chaos_object": [0, 1], "get_namespace_statu": [0, 1], "get_nod": [0, 1], "get_node_resource_vers": [0, 1], "get_nodes_info": [0, 1], "get_pod_info": [0, 1], "get_pod_log": [0, 1], "get_pvc_info": [0, 1], "is_pod_run": [0, 1], "list_killable_managedclust": [0, 1], "list_killable_nod": [0, 1], "list_namespac": [0, 1], "list_nod": [0, 1], "list_pod": [0, 1], "list_ready_nod": [0, 1], "monitor_compon": [0, 1], "monitor_namespac": [0, 1], "monitor_nod": [0, 1], "path_exists_in_pod": [0, 1], "read_pod": [0, 1], "watch_managedcluster_statu": [0, 1], "watch_node_statu": [0, 1], "watch_resourc": [0, 1], "class": [1, 4, 6, 9, 12, 14, 17], "kubeconfig_path": [1, 9], "str": [1, 4, 6, 9, 12, 14, 16, 17], "none": [1, 4, 6, 9, 12, 14, 16, 17], "kubeconfig_str": [1, 9], "base": [1, 4, 6, 9, 12, 14, 16, 17], "object": [1, 4, 6, 12, 14, 16, 17], "constructor": [1, 9], "can": [1, 9], "invok": [1, 9], "option": [1, 9, 12, 17], "kubeconfig": [1, 9, 16], "string": [1, 9, 12, 16], "format": [1, 9, 16], "us": [1, 9, 12, 14, 16, 17], "keyword": [1, 9], "argument": [1, 9], "paramet": [1, 5, 6, 9, 12, 14, 16, 17], "path": [1, 4, 9, 12, 16], "initi": [1, 9, 17], "log_writ": [1, 9], "home": [1, 9], "test": [1, 9], "kube": [1, 9], "config": [1, 9, 12, 14], "apivers": [1, 9], "v1": [1, 9], "apicli": 1, "namespac": [1, 3, 4, 9, 12], "default": [1, 9, 12, 16, 17], "list": [1, 4, 6, 9, 12, 14, 16], "appli": [1, 9, 16], "yaml": [1, 12, 14, 16], "creat": [1, 9, 12], "kubernet": 1, "resourc": 1, "file": [1, 6, 9, 12, 14, 16, 17], "return": [1, 9, 12, 14, 16], "name": [1, 3, 4, 9, 12, 16, 17], "appsv1api": 1, "pod_nam": 1, "container_nam": 1, "remote_archive_path": [1, 12], "target_path": 1, "archive_files_prefix": 1, "download_path": 1, "tmp": [1, 9], "archive_part_s": 1, "int": [1, 6, 9, 12, 14, 16], "30000": 1, "max_thread": 1, "5": 1, "safe_logg": [1, 7, 9, 11, 12, 14, 15], "safelogg": [1, 7, 9, 12, 14, 15, 17], "archiv": [1, 9, 12, 14], "download": [1, 12, 14], "folder": [1, 9, 12, 14, 16], "content": [1, 7], "from": [1, 6, 9, 12, 14, 16], "contain": [1, 2, 3, 4, 6, 9, 12, 16], "base64": [1, 6, 16], "tarbal": 1, "The": [1, 9, 12, 17], "function": [1, 7, 12, 15], "i": [1, 4, 9, 12, 16, 17], "design": 1, "leverag": [1, 9], "multi": 1, "thread": [1, 9, 12, 17], "order": 1, "maxim": 1, "speed": 1, "number": [1, 6, 9, 12, 14, 16], "download_archive_part_from_pod": 1, "call": [1, 16], "made": 1, "parallel": 1, "pod": [1, 2, 3, 4, 9, 12], "which": [1, 12, 14, 16], "must": [1, 9, 12, 14, 16], "where": [1, 4, 9, 12, 16], "temporari": [1, 12, 14], "store": [1, 12, 14], "delet": 1, "onc": 1, "termin": 1, "writabl": 1, "have": [1, 16], "enough": 1, "space": 1, "temporarli": 1, "prefix": [1, 9, 12], "ad": [1, 9], "local": [1, 12, 16], "save": 1, "split": 1, "multipl": [1, 12], "specifi": [1, 12, 16], "maximum": [1, 12, 16], "launch": 1, "omit": 1, "instanti": [1, 17], "simpli": 1, "log": [1, 9, 12, 14, 16, 17], "packag": [1, 4, 7, 17], "print": [1, 16], "stdout": 1, "filenam": [1, 6, 12, 14, 17], "batchv1api": 1, "bool": [1, 4, 16], "check": [1, 16], "exist": 1, "pars": [1, 9, 16], "through": 1, "boolean": 1, "valu": [1, 16], "indic": 1, "whether": 1, "given": [1, 9, 12], "pvc": [1, 2, 3, 4], "project": [1, 4], "persist": [1, 4], "volum": [1, 2, 3, 4], "claim": [1, 4], "label_selector": 1, "all": [1, 9, 16, 17], "watch_namespac": 1, "ar": [1, 9, 12], "valid": 1, "filter": [1, 9, 14, 16], "match": [1, 9, 16], "corev1api": 1, "start_timestamp": [1, 9, 12, 14, 16], "end_timestamp": [1, 9, 12, 14, 16], "local_timezon": [1, 16], "cluster_timezon": [1, 12], "utc": [1, 12], "limit": [1, 9, 16], "500": 1, "collect": [1, 6, 9, 12, 14], "cluster": [1, 6, 9, 12, 14], "event": [1, 12], "queri": 1, "api": [1, 4, 12], "time": [1, 9, 16], "interv": [1, 16], "write": [1, 17], "them": 1, "json": [1, 12], "timestamp": [1, 6, 9, 12, 14, 16], "minimum": [1, 12, 16], "date": [1, 9, 12, 16], "after": [1, 12, 16], "relev": [1, 9, 12, 14, 16], "befor": [1, 12, 16], "timezon": [1, 9, 12, 16], "system": [1, 6, 12, 14, 16], "remot": [1, 12], "fetch": 1, "bodi": 1, "ani": [1, 6, 16], "v1job": 1, "job": [1, 9], "an": [1, 12, 16, 17], "represent": 1, "manifest": 1, "note": 1, "won": [1, 9], "t": [1, 9], "overrid": 1, "open": 1, "manag": 1, "manifestwork": 1, "defin": 1, "group": [1, 3, 4, 9, 16], "hub": 1, "custom": [1, 4, 14], "repres": [1, 9, 12, 14, 16], "newli": 1, "timeout": 1, "120": 1, "request": 1, "customobjectsapi": 1, "daemonset": 1, "certain": 1, "deploy": 1, "full": [1, 12], "remov": [1, 9, 16], "v1statu": 1, "python": 1, "client": [1, 9, 16], "replicaset": 1, "servic": [1, 12, 14], "statefulset": 1, "dynamiccli": 1, "command": [1, 9, 14], "base_command": 1, "std_err": 1, "true": 1, "execut": 1, "its": 1, "pipe": 1, "bash": 1, "c": 1, "case": 1, "along": [1, 12], "find": 1, "node": [1, 4, 6, 12, 14], "kraken": [1, 12, 14], "deploi": [1, 4, 6, 12, 14], "set": [1, 16], "global": 1, "run": [1, 6], "found": 1, "dict": [1, 6, 12, 14, 16], "tupl": [1, 12], "0": [1, 6, 9, 12], "1": [1, 9, 16], "onli": [1, 9, 16], "version": [1, 3, 4, 6, 16], "remote_archive_prefix": 1, "local_download_path": 1, "local_file_prefix": 1, "queue": [1, 12, 16], "queue_siz": [1, 12], "downloaded_file_list": 1, "delete_remote_after_download": 1, "thread_numb": [1, 12], "worker": [1, 6, 12, 16], "create_download_multipart_arch": 1, "method": [1, 4, 16, 17], "dequeu": 1, "safe": [1, 9, 17], "until": [1, 9, 14, 16], "empti": [1, 9], "th": 1, "tar": [1, 9], "pop": 1, "itself": 1, "avoid": 1, "corrupt": 1, "caus": 1, "websocket": 1, "thi": [1, 9, 16], "append": 1, "sequenti": 1, "assign": 1, "two": 1, "digit": 1, "except": [1, 4, 12, 16], "ex": 1, "like": 1, "becom": [1, 16], "00": 1, "To": 1, "extens": [1, 9, 12], "b64": 1, "wil": 1, "total": [1, 12], "size": [1, 4], "share": [1, 12], "between": [1, 9, 12], "allow": 1, "get": [1, 9, 12], "daemon": 1, "detail": 1, "inform": [1, 4, 6, 16], "server": 1, "url": [1, 12], "statu": [1, 3, 4, 6, 9], "ha": [1, 16, 17], "been": [1, 16, 17], "If": [1, 9, 12], "api_vers": 1, "count": 1, "occurr": [1, 16], "kind": [1, 3, 4], "corev1": 1, "dictionari": [1, 6, 16], "customobject": 1, "litmuschaosobject": [1, 2, 3, 4], "retriev": 1, "litmu": [1, 4], "chao": [1, 4, 6, 12, 14], "crd": [1, 4], "type": [1, 6], "data": [1, 4, 12, 17], "subclass": 1, "namespace_nam": 1, "node_nam": 1, "instance_kill_count": 1, "activ": 1, "": [1, 16], "label": 1, "nodeinfo": [1, 2, 5, 6], "about": 1, "specif": 1, "output": [1, 9, 16], "abov": [1, 16], "kubectl": 1, "doesn": 1, "httprespons": 1, "read": [1, 16], "A": 1, "capac": [1, 3, 4], "associ": [1, 4], "fals": [1, 4], "attach": 1, "kill": [1, 17], "selector": 1, "search": [1, 9], "readi": [1, 3, 4], "iter": 1, "component_namespac": 1, "monitor": [1, 9], "compon": 1, "one": [1, 12, 16], "more": 1, "otherwis": [1, 16, 17], "v1pod": 1, "definit": 1, "managedclust": 1, "watch": 1, "occur": 1, "resource_vers": 1, "k8": [2, 7, 9, 10], "submodul": [2, 7, 10], "apirequestexcept": [2, 3, 4], "chaosengin": [2, 3, 4], "chaosresult": [2, 3, 4], "volumemount": [2, 3, 4], "telemetri": [2, 7], "chaosruntelemetri": [2, 5, 6, 12, 14], "scenariotelemetri": [2, 5, 6, 12], "enginestatu": [3, 4], "expstatu": [3, 4], "failstep": [3, 4], "verdict": [3, 4], "imag": [3, 4], "plural": [3, 4], "podnam": [3, 4], "volumenam": [3, 4], "nodenam": [3, 4], "podip": [3, 4], "pvcname": [3, 4], "mountpath": [3, 4], "gener": [4, 6, 12], "rais": 4, "hold": 4, "regard": 4, "engin": 4, "experi": 4, "flag": 4, "show": 4, "failur": 4, "step": 4, "chaosexperi": 4, "mount": 4, "ip": 4, "address": 4, "molum": 4, "cloud_infrastructur": [5, 6], "kubernetes_objects_count": [5, 6], "network_plugin": [5, 6], "node_count": [5, 6], "node_info": [5, 6], "run_uuid": [5, 6], "scenario": [5, 6, 16], "to_json": [5, 6], "architectur": [5, 6], "instance_typ": [5, 6], "kernel_vers": [5, 6], "kubelet_vers": [5, 6], "node_typ": [5, 6], "os_vers": [5, 6], "endtimestamp": [5, 6], "exitstatu": [5, 6], "parametersbase64": [5, 6], "starttimestamp": [5, 6], "json_object": 6, "root": 6, "unknown": [6, 9], "cloud": [6, 9, 12, 14], "infrastructur": [6, 9, 12, 14], "avail": [6, 9], "target": 6, "dure": 6, "network": [6, 9, 12, 14], "plugin": [6, 9, 12, 14], "info": [6, 9, 12, 14, 15, 16, 17], "uuid": [6, 12, 14], "krkn": [6, 12, 14], "perform": 6, "cpu": 6, "instanc": 6, "kernel": 6, "kubelet": 6, "infra": 6, "master": 6, "etc": 6, "oper": 6, "float": 6, "when": [6, 9], "end": [6, 9, 14, 16], "exit": 6, "configur": 6, "encod": [6, 16], "start": [6, 9, 14, 16], "modul": 7, "model": 7, "subpackag": 7, "ocp": [7, 10], "krkn_openshift": [7, 8], "krknopenshift": [7, 8, 9, 14], "util": 7, "check_date_in_localized_interv": [7, 15, 16], "decode_base64_fil": [7, 15, 16], "deep_set_attribut": [7, 15, 16], "filter_dictionari": [7, 15, 16], "filter_log_file_work": [7, 15, 16], "filter_log_lin": [7, 15, 16], "find_executable_in_path": [7, 15, 16], "get_yaml_item_valu": [7, 15, 16], "log_except": [7, 15, 16], "collect_filter_archive_ocp_log": [8, 9], "filter_must_gather_ocp_log_fold": [8, 9], "get_cloud_infrastructur": [8, 9], "get_cluster_network_plugin": [8, 9], "get_clusterversion_str": [8, 9], "src_dir": 9, "dst_dir": 9, "log_filter_pattern": [9, 16], "oc_path": 9, "final": [9, 16], "gz": 9, "criteria": [9, 16], "pass": 9, "oc": [9, 14], "gather": [9, 14], "adm": [9, 14], "written": 9, "first": [9, 12, 14, 16], "entri": [9, 14, 16], "begin": 9, "last": [9, 14, 16], "latest": [9, 14, 16], "do": 9, "regex": [9, 16], "extract": [9, 16], "dateutil": [9, 16], "parser": [9, 16], "support": [9, 16], "sever": [9, 16], "everi": [9, 16], "logger": [9, 17], "stream": 9, "log_files_extens": 9, "usual": 9, "each": [9, 16], "line": [9, 16], "against": 9, "pattern": [9, 16], "within": [9, 16], "rang": [9, 16], "bottom": [9, 16], "top": [9, 14, 16], "respect": 9, "multithread": [9, 12], "record": 9, "doe": 9, "row": 9, "origin": 9, "structur": 9, "includ": [9, 16], "separ": 9, "dot": 9, "eg": 9, "log_fil": 9, "openshift": [9, 14], "prometheu": [9, 12, 14], "current": 9, "noqa": 9, "wildcard": 9, "consid": 9, "log_file_nam": [9, 15, 17], "unavail": 9, "clustervers": 9, "text": 9, "other": 9, "distribut": 9, "krkn_telemetry_kubernet": [10, 11], "krkntelemetrykubernet": [10, 11, 12, 14], "krkn_telemetry_openshift": [10, 13], "krkntelemetryopenshift": [10, 13, 14], "collect_cluster_metadata": [11, 12, 13, 14], "generate_url_and_put_to_s3_work": [11, 12], "get_bucket_url_for_filenam": [11, 12], "get_prometheus_pod_data": [11, 12], "kubecli": [11, 12], "put_cluster_ev": [11, 12], "put_file_to_url": [11, 12], "put_prometheus_data": [11, 12], "send_telemetri": [11, 12], "set_parameters_base64": [11, 12], "lib_kubernet": 12, "chaos_telemetri": [12, 14], "metadata": [12, 14], "enrich": [12, 14], "sent": [12, 14], "request_id": [12, 14], "api_url": 12, "usernam": 12, "password": 12, "uploaded_file_list": 12, "max_retri": 12, "remote_file_prefix": 12, "remote_file_extens": 12, "s3": [12, 14], "link": 12, "put": [12, 14], "upload": 12, "directli": 12, "bucket": [12, 14], "consum": [12, 17], "element": 12, "item": [12, 16], "sequenc": 12, "second": 12, "third": 12, "retri": 12, "counter": 12, "updat": 12, "compar": 12, "session": [12, 14], "endpoint": 12, "indefinit": 12, "progress": 12, "bucket_fold": 12, "remote_filenam": 12, "shot": 12, "telemetry_config": [12, 14], "prometheus_pod_nam": 12, "prometheus_container_nam": 12, "prometheus_namespac": 12, "metric": [12, 14], "conf": [12, 14], "section": [12, 14], "live": 12, "local_filenam": 12, "param": 12, "archive_volum": 12, "send": 12, "web": 12, "alreadi": 12, "popul": 12, "scenario_telemetri": 12, "file_path": 12, "get_ocp_prometheus_data": [13, 14], "ocpcli": [13, 14], "put_ocp_log": [13, 14], "lib_openshift": 14, "built": 14, "earliest": [14, 16], "close": [15, 17], "error": [15, 17], "warn": [15, 17], "write_work": [15, 17], "check_timestamp": 16, "check_timezon": 16, "interval_timezon": 16, "source_filenam": 16, "destination_filenam": 16, "decod": 16, "while": 16, "memori": 16, "alloc": 16, "suitabl": 16, "big": 16, "convers": 16, "sourc": 16, "destin": 16, "attribut": 16, "obj": 16, "recurs": 16, "exampl": 16, "usag": 16, "anonym": 16, "properti": [16, 17], "dummi": 16, "present": 16, "travers": 16, "modifi": 16, "datetime_kei": 16, "dictionary_timezon": 16, "datetim": 16, "need": 16, "kei": 16, "still": 16, "src_folder": 16, "dst_folder": 16, "remote_timezon": 16, "scan": 16, "naiv": 16, "approach": 16, "algorithm": 16, "implet": 16, "provid": [16, 17], "regular": 16, "express": 16, "directori": 16, "place": 16, "pathlib": 16, "log_lin": 16, "re": 16, "compil": 16, "excatli": 16, "executable_nam": 16, "cont": 16, "write_mod": 17, "mechan": 17, "mode": 17, "w": 17, "work": 17, "wrapper": 17, "around": 17, "doubl": 17, "meant": 17, "forc": 17, "depend": 17, "behav": 17, "simpl": 17, "wait": 17, "messag": 17, "writer": 17, "logfil": 17, "standard": 17}, "objects": {"": [[0, 0, 0, "-", "k8s"], [2, 0, 0, "-", "models"], [8, 0, 0, "-", "ocp"], [10, 0, 0, "-", "telemetry"], [15, 0, 0, "-", "utils"]], "k8s": [[1, 0, 0, "-", "krkn_kubernetes"]], "k8s.krkn_kubernetes": [[1, 1, 1, "", "KrknKubernetes"]], "k8s.krkn_kubernetes.KrknKubernetes": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "api_client"], [1, 2, 1, "", "apply_yaml"], [1, 3, 1, "", "apps_api"], [1, 2, 1, "", "archive_and_get_path_from_pod"], [1, 3, 1, "", "batch_cli"], [1, 2, 1, "", "check_if_namespace_exists"], [1, 2, 1, "", "check_if_pod_exists"], [1, 2, 1, "", "check_if_pvc_exists"], [1, 2, 1, "", "check_namespaces"], [1, 3, 1, "", "cli"], [1, 2, 1, "", "collect_cluster_events"], [1, 2, 1, "", "create_job"], [1, 2, 1, "", "create_manifestwork"], [1, 2, 1, "", "create_pod"], [1, 3, 1, "", "custom_object_client"], [1, 2, 1, "", "delete_daemonset"], [1, 2, 1, "", "delete_deployment"], [1, 2, 1, "", "delete_file_from_pod"], [1, 2, 1, "", "delete_job"], [1, 2, 1, "", "delete_manifestwork"], [1, 2, 1, "", "delete_namespace"], [1, 2, 1, "", "delete_pod"], [1, 2, 1, "", "delete_replicaset"], [1, 2, 1, "", "delete_services"], [1, 2, 1, "", "delete_statefulset"], [1, 3, 1, "", "dyn_client"], [1, 2, 1, "", "exec_cmd_in_pod"], [1, 2, 1, "", "find_kraken_node"], [1, 2, 1, "", "get_all_kubernetes_object_count"], [1, 2, 1, "", "get_all_pods"], [1, 2, 1, "", "get_all_replicasets"], [1, 2, 1, "", "get_all_services"], [1, 2, 1, "", "get_all_statefulset"], [1, 2, 1, "", "get_api_resources_by_group"], [1, 2, 1, "", "get_archive_volume_from_pod_worker"], [1, 2, 1, "", "get_containers_in_pod"], [1, 2, 1, "", "get_daemonset"], [1, 2, 1, "", "get_deployment_ns"], [1, 2, 1, "", "get_deployment_ready"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_job_status"], [1, 2, 1, "", "get_kubeconfig_path"], [1, 2, 1, "", "get_kubernetes_core_objects_count"], [1, 2, 1, "", "get_kubernetes_custom_objects_count"], [1, 2, 1, "", "get_litmus_chaos_object"], [1, 2, 1, "", "get_namespace_status"], [1, 2, 1, "", "get_node"], [1, 2, 1, "", "get_node_resource_version"], [1, 2, 1, "", "get_nodes_infos"], [1, 2, 1, "", "get_pod_info"], [1, 2, 1, "", "get_pod_log"], [1, 2, 1, "", "get_pvc_info"], [1, 2, 1, "", "is_pod_running"], [1, 2, 1, "", "list_killable_managedclusters"], [1, 2, 1, "", "list_killable_nodes"], [1, 2, 1, "", "list_namespaces"], [1, 2, 1, "", "list_nodes"], [1, 2, 1, "", "list_pods"], [1, 2, 1, "", "list_ready_nodes"], [1, 2, 1, "", "monitor_component"], [1, 2, 1, "", "monitor_namespace"], [1, 2, 1, "", "monitor_nodes"], [1, 2, 1, "", "path_exists_in_pod"], [1, 2, 1, "", "read_pod"], [1, 2, 1, "", "watch_managedcluster_status"], [1, 2, 1, "", "watch_node_status"], [1, 3, 1, "", "watch_resource"]], "models": [[3, 0, 0, "-", "k8s"], [5, 0, 0, "-", "telemetry"]], "models.k8s": [[4, 0, 0, "-", "models"]], "models.k8s.models": [[4, 4, 1, "", "ApiRequestException"], [4, 1, 1, "", "ChaosEngine"], [4, 1, 1, "", "ChaosResult"], [4, 1, 1, "", "Container"], [4, 1, 1, "", "LitmusChaosObject"], [4, 1, 1, "", "PVC"], [4, 1, 1, "", "Pod"], [4, 1, 1, "", "Volume"], [4, 1, 1, "", "VolumeMount"]], "models.k8s.models.ChaosEngine": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "engineStatus"], [4, 3, 1, "", "expStatus"]], "models.k8s.models.ChaosResult": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "failStep"], [4, 3, 1, "", "verdict"]], "models.k8s.models.Container": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "image"], [4, 3, 1, "", "name"], [4, 3, 1, "", "ready"], [4, 3, 1, "", "volumeMounts"]], "models.k8s.models.LitmusChaosObject": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "group"], [4, 3, 1, "", "kind"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "plural"], [4, 3, 1, "", "version"]], "models.k8s.models.PVC": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "capacity"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "podNames"], [4, 3, 1, "", "volumeName"]], "models.k8s.models.Pod": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "containers"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "nodeName"], [4, 3, 1, "", "podIP"], [4, 3, 1, "", "status"], [4, 3, 1, "", "volumes"]], "models.k8s.models.Volume": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "pvcName"]], "models.k8s.models.VolumeMount": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "mountPath"], [4, 3, 1, "", "name"]], "models.telemetry": [[6, 0, 0, "-", "models"]], "models.telemetry.models": [[6, 1, 1, "", "ChaosRunTelemetry"], [6, 1, 1, "", "NodeInfo"], [6, 1, 1, "", "ScenarioTelemetry"]], "models.telemetry.models.ChaosRunTelemetry": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "cloud_infrastructure"], [6, 3, 1, "", "kubernetes_objects_count"], [6, 3, 1, "", "network_plugins"], [6, 3, 1, "", "node_count"], [6, 3, 1, "", "node_infos"], [6, 3, 1, "", "run_uuid"], [6, 3, 1, "", "scenarios"], [6, 2, 1, "", "to_json"]], "models.telemetry.models.NodeInfo": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "architecture"], [6, 3, 1, "", "instance_type"], [6, 3, 1, "", "kernel_version"], [6, 3, 1, "", "kubelet_version"], [6, 3, 1, "", "node_type"], [6, 3, 1, "", "os_version"]], "models.telemetry.models.ScenarioTelemetry": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "endTimeStamp"], [6, 3, 1, "", "exitStatus"], [6, 3, 1, "", "parameters"], [6, 3, 1, "", "parametersBase64"], [6, 3, 1, "", "scenario"], [6, 3, 1, "", "startTimeStamp"]], "ocp": [[9, 0, 0, "-", "krkn_openshift"]], "ocp.krkn_openshift": [[9, 1, 1, "", "KrknOpenshift"]], "ocp.krkn_openshift.KrknOpenshift": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "collect_filter_archive_ocp_logs"], [9, 2, 1, "", "filter_must_gather_ocp_log_folder"], [9, 2, 1, "", "get_cloud_infrastructure"], [9, 2, 1, "", "get_cluster_network_plugins"], [9, 2, 1, "", "get_clusterversion_string"]], "telemetry": [[11, 0, 0, "-", "k8s"], [13, 0, 0, "-", "ocp"]], "telemetry.k8s": [[12, 0, 0, "-", "krkn_telemetry_kubernetes"]], "telemetry.k8s.krkn_telemetry_kubernetes": [[12, 1, 1, "", "KrknTelemetryKubernetes"]], "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "collect_cluster_metadata"], [12, 2, 1, "", "generate_url_and_put_to_s3_worker"], [12, 2, 1, "", "get_bucket_url_for_filename"], [12, 2, 1, "", "get_prometheus_pod_data"], [12, 3, 1, "", "kubecli"], [12, 2, 1, "", "put_cluster_events"], [12, 2, 1, "", "put_file_to_url"], [12, 2, 1, "", "put_prometheus_data"], [12, 3, 1, "", "safe_logger"], [12, 2, 1, "", "send_telemetry"], [12, 2, 1, "", "set_parameters_base64"]], "telemetry.ocp": [[14, 0, 0, "-", "krkn_telemetry_openshift"]], "telemetry.ocp.krkn_telemetry_openshift": [[14, 1, 1, "", "KrknTelemetryOpenshift"]], "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "collect_cluster_metadata"], [14, 2, 1, "", "get_ocp_prometheus_data"], [14, 3, 1, "", "ocpcli"], [14, 2, 1, "", "put_ocp_logs"]], "utils": [[16, 0, 0, "-", "functions"], [17, 0, 0, "-", "safe_logger"]], "utils.functions": [[16, 5, 1, "", "check_date_in_localized_interval"], [16, 5, 1, "", "decode_base64_file"], [16, 5, 1, "", "deep_set_attribute"], [16, 5, 1, "", "filter_dictionary"], [16, 5, 1, "", "filter_log_file_worker"], [16, 5, 1, "", "filter_log_line"], [16, 5, 1, "", "find_executable_in_path"], [16, 5, 1, "", "get_yaml_item_value"], [16, 5, 1, "", "log_exception"]], "utils.safe_logger": [[17, 1, 1, "", "SafeLogger"]], "utils.safe_logger.SafeLogger": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "close"], [17, 2, 1, "", "error"], [17, 2, 1, "", "info"], [17, 6, 1, "", "log_file_name"], [17, 2, 1, "", "warning"], [17, 2, 1, "", "write_worker"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"k8": [0, 1, 3, 4, 11, 12], "packag": [0, 2, 3, 5, 8, 10, 11, 13, 15], "submodul": [0, 3, 5, 8, 11, 13, 15], "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "content": [0, 2, 3, 5, 8, 10, 11, 13, 15], "krkn_kubernet": 1, "model": [2, 3, 4, 5, 6], "subpackag": [2, 10], "telemetri": [5, 6, 10, 11, 12, 13, 14], "krkn": 7, "foundat": 7, "librari": 7, "ocp": [8, 9, 13, 14], "krkn_openshift": 9, "krkn_telemetry_kubernet": 12, "krkn_telemetry_openshift": 14, "util": [15, 16, 17], "function": 16, "safe_logg": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"k8s package": [[0, "k8s-package"]], "Submodules": [[0, "submodules"], [3, "submodules"], [5, "submodules"], [8, "submodules"], [11, "submodules"], [13, "submodules"], [15, "submodules"]], "Module contents": [[0, "module-k8s"], [2, "module-models"], [3, "module-models.k8s"], [5, "module-models.telemetry"], [8, "module-ocp"], [10, "module-telemetry"], [11, "module-telemetry.k8s"], [13, "module-telemetry.ocp"], [15, "module-utils"]], "k8s.krkn_kubernetes module": [[1, "module-k8s.krkn_kubernetes"]], "models package": [[2, "models-package"]], "Subpackages": [[2, "subpackages"], [10, "subpackages"]], "models.k8s package": [[3, "models-k8s-package"]], "models.k8s.models module": [[4, "module-models.k8s.models"]], "models.telemetry package": [[5, "models-telemetry-package"]], "models.telemetry.models module": [[6, "module-models.telemetry.models"]], "Krkn Foundation Library": [[7, "krkn-foundation-library"]], "ocp package": [[8, "ocp-package"]], "ocp.krkn_openshift module": [[9, "module-ocp.krkn_openshift"]], "telemetry package": [[10, "telemetry-package"]], "telemetry.k8s package": [[11, "telemetry-k8s-package"]], "telemetry.k8s.krkn_telemetry_kubernetes module": [[12, "module-telemetry.k8s.krkn_telemetry_kubernetes"]], "telemetry.ocp package": [[13, "telemetry-ocp-package"]], "telemetry.ocp.krkn_telemetry_openshift module": [[14, "module-telemetry.ocp.krkn_telemetry_openshift"]], "utils package": [[15, "utils-package"]], "utils.functions module": [[16, "module-utils.functions"]], "utils.safe_logger module": [[17, "module-utils.safe_logger"]]}, "indexentries": {"k8s": [[0, "module-k8s"]], "module": [[0, "module-k8s"], [1, "module-k8s.krkn_kubernetes"], [2, "module-models"], [3, "module-models.k8s"], [4, "module-models.k8s.models"], [5, "module-models.telemetry"], [6, "module-models.telemetry.models"], [8, "module-ocp"], [9, "module-ocp.krkn_openshift"], [10, "module-telemetry"], [11, "module-telemetry.k8s"], [12, "module-telemetry.k8s.krkn_telemetry_kubernetes"], [13, "module-telemetry.ocp"], [14, "module-telemetry.ocp.krkn_telemetry_openshift"], [15, "module-utils"], [16, "module-utils.functions"], [17, "module-utils.safe_logger"]], "krknkubernetes (class in k8s.krkn_kubernetes)": [[1, "k8s.krkn_kubernetes.KrknKubernetes"]], "__init__() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.__init__"]], "api_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.api_client"]], "apply_yaml() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.apply_yaml"]], "apps_api (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.apps_api"]], "archive_and_get_path_from_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.archive_and_get_path_from_pod"]], "batch_cli (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.batch_cli"]], "check_if_namespace_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_namespace_exists"]], "check_if_pod_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_pod_exists"]], "check_if_pvc_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_pvc_exists"]], "check_namespaces() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_namespaces"]], "cli (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.cli"]], "collect_cluster_events() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.collect_cluster_events"]], "create_job() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_job"]], "create_manifestwork() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_manifestwork"]], "create_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_pod"]], "custom_object_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.custom_object_client"]], "delete_daemonset() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_daemonset"]], "delete_deployment() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_deployment"]], "delete_file_from_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_file_from_pod"]], "delete_job() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_job"]], "delete_manifestwork() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_manifestwork"]], "delete_namespace() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_namespace"]], "delete_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_pod"]], "delete_replicaset() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_replicaset"]], "delete_services() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_services"]], "delete_statefulset() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_statefulset"]], "dyn_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.dyn_client"]], "exec_cmd_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.exec_cmd_in_pod"]], "find_kraken_node() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.find_kraken_node"]], "get_all_kubernetes_object_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_kubernetes_object_count"]], "get_all_pods() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_pods"]], "get_all_replicasets() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_replicasets"]], "get_all_services() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_services"]], "get_all_statefulset() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_statefulset"]], "get_api_resources_by_group() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_api_resources_by_group"]], "get_archive_volume_from_pod_worker() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_archive_volume_from_pod_worker"]], "get_containers_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_containers_in_pod"]], "get_daemonset() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_daemonset"]], "get_deployment_ns() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_deployment_ns"]], "get_deployment_ready() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_deployment_ready"]], "get_host() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_host"]], "get_job_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_job_status"]], "get_kubeconfig_path() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_kubeconfig_path"]], "get_kubernetes_core_objects_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_kubernetes_core_objects_count"]], "get_kubernetes_custom_objects_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_kubernetes_custom_objects_count"]], "get_litmus_chaos_object() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_litmus_chaos_object"]], "get_namespace_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_namespace_status"]], "get_node() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_node"]], "get_node_resource_version() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_node_resource_version"]], "get_nodes_infos() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_nodes_infos"]], "get_pod_info() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pod_info"]], "get_pod_log() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pod_log"]], "get_pvc_info() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pvc_info"]], "is_pod_running() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.is_pod_running"]], "k8s.krkn_kubernetes": [[1, "module-k8s.krkn_kubernetes"]], "list_killable_managedclusters() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_killable_managedclusters"]], "list_killable_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_killable_nodes"]], "list_namespaces() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_namespaces"]], "list_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_nodes"]], "list_pods() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_pods"]], "list_ready_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_ready_nodes"]], "monitor_component() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_component"]], "monitor_namespace() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_namespace"]], "monitor_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_nodes"]], "path_exists_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.path_exists_in_pod"]], "read_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.read_pod"]], "watch_managedcluster_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_managedcluster_status"]], "watch_node_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_node_status"]], "watch_resource (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_resource"]], "models": [[2, "module-models"]], "models.k8s": [[3, "module-models.k8s"]], "apirequestexception": [[4, "models.k8s.models.ApiRequestException"]], "chaosengine (class in models.k8s.models)": [[4, "models.k8s.models.ChaosEngine"]], "chaosresult (class in models.k8s.models)": [[4, "models.k8s.models.ChaosResult"]], "container (class in models.k8s.models)": [[4, "models.k8s.models.Container"]], "litmuschaosobject (class in models.k8s.models)": [[4, "models.k8s.models.LitmusChaosObject"]], "pvc (class in models.k8s.models)": [[4, "models.k8s.models.PVC"]], "pod (class in models.k8s.models)": [[4, "models.k8s.models.Pod"]], "volume (class in models.k8s.models)": [[4, "models.k8s.models.Volume"]], "volumemount (class in models.k8s.models)": [[4, "models.k8s.models.VolumeMount"]], "__init__() (models.k8s.models.chaosengine method)": [[4, "models.k8s.models.ChaosEngine.__init__"]], "__init__() (models.k8s.models.chaosresult method)": [[4, "models.k8s.models.ChaosResult.__init__"]], "__init__() (models.k8s.models.container method)": [[4, "models.k8s.models.Container.__init__"]], "__init__() (models.k8s.models.litmuschaosobject method)": [[4, "models.k8s.models.LitmusChaosObject.__init__"]], "__init__() (models.k8s.models.pvc method)": [[4, "models.k8s.models.PVC.__init__"]], "__init__() (models.k8s.models.pod method)": [[4, "models.k8s.models.Pod.__init__"]], "__init__() (models.k8s.models.volume method)": [[4, "models.k8s.models.Volume.__init__"]], "__init__() (models.k8s.models.volumemount method)": [[4, "models.k8s.models.VolumeMount.__init__"]], "capacity (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.capacity"]], "containers (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.containers"]], "enginestatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.engineStatus"]], "expstatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.expStatus"]], "failstep (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.failStep"]], "group (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.group"]], "image (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.image"]], "kind (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.kind"]], "models.k8s.models": [[4, "module-models.k8s.models"]], "mountpath (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.mountPath"]], "name (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.name"]], "name (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.name"]], "name (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.name"]], "name (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.name"]], "name (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.name"]], "name (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.name"]], "namespace (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.namespace"]], "namespace (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.namespace"]], "namespace (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.namespace"]], "nodename (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.nodeName"]], "plural (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.plural"]], "podip (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.podIP"]], "podnames (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.podNames"]], "pvcname (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.pvcName"]], "ready (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.ready"]], "status (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.status"]], "verdict (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.verdict"]], "version (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.version"]], "volumemounts (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.volumeMounts"]], "volumename (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.volumeName"]], "volumes (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.volumes"]], "models.telemetry": [[5, "module-models.telemetry"]], "chaosruntelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ChaosRunTelemetry"]], "nodeinfo (class in models.telemetry.models)": [[6, "models.telemetry.models.NodeInfo"]], "scenariotelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ScenarioTelemetry"]], "__init__() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.__init__"]], "__init__() (models.telemetry.models.nodeinfo method)": [[6, "models.telemetry.models.NodeInfo.__init__"]], "__init__() (models.telemetry.models.scenariotelemetry method)": [[6, "models.telemetry.models.ScenarioTelemetry.__init__"]], "architecture (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.architecture"]], "cloud_infrastructure (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.cloud_infrastructure"]], "endtimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.endTimeStamp"]], "exitstatus (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.exitStatus"]], "instance_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.instance_type"]], "kernel_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kernel_version"]], "kubelet_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kubelet_version"]], "kubernetes_objects_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.kubernetes_objects_count"]], "models.telemetry.models": [[6, "module-models.telemetry.models"]], "network_plugins (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.network_plugins"]], "node_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_count"]], "node_infos (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_infos"]], "node_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.node_type"]], "os_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.os_version"]], "parameters (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parameters"]], "parametersbase64 (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parametersBase64"]], "run_uuid (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.run_uuid"]], "scenario (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.scenario"]], "scenarios (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.scenarios"]], "starttimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.startTimeStamp"]], "to_json() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.to_json"]], "ocp": [[8, "module-ocp"]], "krknopenshift (class in ocp.krkn_openshift)": [[9, "ocp.krkn_openshift.KrknOpenshift"]], "__init__() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.__init__"]], "collect_filter_archive_ocp_logs() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.collect_filter_archive_ocp_logs"]], "filter_must_gather_ocp_log_folder() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.filter_must_gather_ocp_log_folder"]], "get_cloud_infrastructure() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.get_cloud_infrastructure"]], "get_cluster_network_plugins() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.get_cluster_network_plugins"]], "get_clusterversion_string() (ocp.krkn_openshift.krknopenshift method)": [[9, "ocp.krkn_openshift.KrknOpenshift.get_clusterversion_string"]], "ocp.krkn_openshift": [[9, "module-ocp.krkn_openshift"]], "telemetry": [[10, "module-telemetry"]], "telemetry.k8s": [[11, "module-telemetry.k8s"]], "krkntelemetrykubernetes (class in telemetry.k8s.krkn_telemetry_kubernetes)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes"]], "__init__() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.__init__"]], "collect_cluster_metadata() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.collect_cluster_metadata"]], "generate_url_and_put_to_s3_worker() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.generate_url_and_put_to_s3_worker"]], "get_bucket_url_for_filename() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.get_bucket_url_for_filename"]], "get_prometheus_pod_data() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.get_prometheus_pod_data"]], "kubecli (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes attribute)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.kubecli"]], "put_cluster_events() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.put_cluster_events"]], "put_file_to_url() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.put_file_to_url"]], "put_prometheus_data() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.put_prometheus_data"]], "safe_logger (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes attribute)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.safe_logger"]], "send_telemetry() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.send_telemetry"]], "set_parameters_base64() (telemetry.k8s.krkn_telemetry_kubernetes.krkntelemetrykubernetes method)": [[12, "telemetry.k8s.krkn_telemetry_kubernetes.KrknTelemetryKubernetes.set_parameters_base64"]], "telemetry.k8s.krkn_telemetry_kubernetes": [[12, "module-telemetry.k8s.krkn_telemetry_kubernetes"]], "telemetry.ocp": [[13, "module-telemetry.ocp"]], "krkntelemetryopenshift (class in telemetry.ocp.krkn_telemetry_openshift)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift"]], "__init__() (telemetry.ocp.krkn_telemetry_openshift.krkntelemetryopenshift method)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift.__init__"]], "collect_cluster_metadata() (telemetry.ocp.krkn_telemetry_openshift.krkntelemetryopenshift method)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift.collect_cluster_metadata"]], "get_ocp_prometheus_data() (telemetry.ocp.krkn_telemetry_openshift.krkntelemetryopenshift method)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift.get_ocp_prometheus_data"]], "ocpcli (telemetry.ocp.krkn_telemetry_openshift.krkntelemetryopenshift attribute)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift.ocpcli"]], "put_ocp_logs() (telemetry.ocp.krkn_telemetry_openshift.krkntelemetryopenshift method)": [[14, "telemetry.ocp.krkn_telemetry_openshift.KrknTelemetryOpenshift.put_ocp_logs"]], "telemetry.ocp.krkn_telemetry_openshift": [[14, "module-telemetry.ocp.krkn_telemetry_openshift"]], "utils": [[15, "module-utils"]], "check_date_in_localized_interval() (in module utils.functions)": [[16, "utils.functions.check_date_in_localized_interval"]], "decode_base64_file() (in module utils.functions)": [[16, "utils.functions.decode_base64_file"]], "deep_set_attribute() (in module utils.functions)": [[16, "utils.functions.deep_set_attribute"]], "filter_dictionary() (in module utils.functions)": [[16, "utils.functions.filter_dictionary"]], "filter_log_file_worker() (in module utils.functions)": [[16, "utils.functions.filter_log_file_worker"]], "filter_log_line() (in module utils.functions)": [[16, "utils.functions.filter_log_line"]], "find_executable_in_path() (in module utils.functions)": [[16, "utils.functions.find_executable_in_path"]], "get_yaml_item_value() (in module utils.functions)": [[16, "utils.functions.get_yaml_item_value"]], "log_exception() (in module utils.functions)": [[16, "utils.functions.log_exception"]], "utils.functions": [[16, "module-utils.functions"]], "safelogger (class in utils.safe_logger)": [[17, "utils.safe_logger.SafeLogger"]], "__init__() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.__init__"]], "close() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.close"]], "error() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.error"]], "info() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.info"]], "log_file_name (utils.safe_logger.safelogger property)": [[17, "utils.safe_logger.SafeLogger.log_file_name"]], "utils.safe_logger": [[17, "module-utils.safe_logger"]], "warning() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.warning"]], "write_worker() (utils.safe_logger.safelogger method)": [[17, "utils.safe_logger.SafeLogger.write_worker"]]}})