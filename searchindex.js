Search.setIndex({"docnames": ["k8s", "k8s.krkn_kubernetes", "models", "models.k8s", "models.k8s.models", "models.telemetry", "models.telemetry.models", "modules", "telemetry", "telemetry.krkn_telemetry", "tests", "tests.base_test", "tests.test_krkn_kubernetes", "tests.test_krkn_telemetry", "tests.test_krkn_telemetry_models", "tests.test_utils", "utils", "utils.functions", "utils.safe_logger"], "filenames": ["k8s.rst", "k8s.krkn_kubernetes.rst", "models.rst", "models.k8s.rst", "models.k8s.models.rst", "models.telemetry.rst", "models.telemetry.models.rst", "modules.rst", "telemetry.rst", "telemetry.krkn_telemetry.rst", "tests.rst", "tests.base_test.rst", "tests.test_krkn_kubernetes.rst", "tests.test_krkn_telemetry.rst", "tests.test_krkn_telemetry_models.rst", "tests.test_utils.rst", "utils.rst", "utils.functions.rst", "utils.safe_logger.rst"], "titles": ["k8s package", "k8s.krkn_kubernetes module", "models package", "models.k8s package", "models.k8s.models module", "models.telemetry package", "models.telemetry.models module", "Krkn Foundation Library", "telemetry package", "telemetry.krkn_telemetry module", "tests package", "tests.base_test module", "tests.test_krkn_kubernetes module", "tests.test_krkn_telemetry module", "tests.test_krkn_telemetry_models module", "tests.test_utils module", "utils package", "utils.functions module", "utils.safe_logger module"], "terms": {"krkn_kubernet": [0, 7], "krknkubernet": [0, 1, 7, 9, 11, 12, 13, 15], "__init__": [0, 1, 3, 4, 5, 6, 8, 9, 16, 18], "api_cli": [0, 1], "apply_yaml": [0, 1], "archive_and_get_path_from_pod": [0, 1], "batch_cli": [0, 1], "check_if_namespace_exist": [0, 1], "check_if_pod_exist": [0, 1], "check_if_pvc_exist": [0, 1], "check_namespac": [0, 1], "cli": [0, 1], "create_job": [0, 1], "create_manifestwork": [0, 1], "create_pod": [0, 1], "custom_object_cli": [0, 1], "delete_file_from_pod": [0, 1], "delete_job": [0, 1], "delete_manifestwork": [0, 1], "delete_namespac": [0, 1], "delete_pod": [0, 1], "dyn_client": [0, 1], "exec_cmd_in_pod": [0, 1], "find_kraken_nod": [0, 1], "get_all_kubernetes_object_count": [0, 1], "get_all_pod": [0, 1], "get_api_resources_by_group": [0, 1], "get_archive_volume_from_pod_work": [0, 1], "get_cluster_infrastructur": [0, 1], "get_cluster_network_plugin": [0, 1], "get_clusterversion_str": [0, 1], "get_containers_in_pod": [0, 1], "get_host": [0, 1], "get_job_statu": [0, 1], "get_kubernetes_core_objects_count": [0, 1], "get_kubernetes_custom_objects_count": [0, 1], "get_litmus_chaos_object": [0, 1], "get_namespace_statu": [0, 1], "get_nod": [0, 1], "get_node_resource_vers": [0, 1], "get_nodes_info": [0, 1], "get_pod_info": [0, 1], "get_pod_log": [0, 1], "get_pvc_info": [0, 1], "is_pod_run": [0, 1], "list_killable_managedclust": [0, 1], "list_killable_nod": [0, 1], "list_namespac": [0, 1], "list_nod": [0, 1], "list_pod": [0, 1], "list_ready_nod": [0, 1], "monitor_compon": [0, 1], "monitor_namespac": [0, 1], "monitor_nod": [0, 1], "path_exists_in_pod": [0, 1], "read_pod": [0, 1], "watch_managedcluster_statu": [0, 1], "watch_node_statu": [0, 1], "watch_resourc": [0, 1], "class": [1, 4, 6, 9, 11, 12, 13, 14, 15, 18], "kubeconfig_path": 1, "str": [1, 4, 6, 9, 11, 17, 18], "none": [1, 4, 6, 9, 11, 17, 18], "kubeconfig_str": 1, "base": [1, 4, 6, 9, 11, 12, 13, 14, 15, 18], "object": [1, 4, 6, 9, 17, 18], "constructor": 1, "can": 1, "invok": 1, "option": [1, 18], "kubeconfig": 1, "string": 1, "format": 1, "us": [1, 9], "keyword": 1, "argument": 1, "param": [1, 9, 17, 18], "path": [1, 9], "initi": [1, 18], "log_writ": 1, "home": 1, "test": [1, 7], "kube": 1, "config": [1, 9], "apivers": 1, "v1": 1, "apicli": 1, "namespac": [1, 3, 4, 11], "default": [1, 11, 18], "list": [1, 4, 6, 9, 11], "appli": 1, "yaml": [1, 9], "creat": [1, 9], "kubernet": 1, "resourc": 1, "file": [1, 9, 17, 18], "return": [1, 9, 17], "name": [1, 3, 4, 9, 11, 17, 18], "pod_nam": 1, "container_nam": 1, "remote_archive_path": 1, "target_path": 1, "archive_files_prefix": 1, "download_path": 1, "tmp": 1, "archive_part_s": 1, "int": [1, 6, 9, 11], "30000": 1, "max_thread": 1, "5": 1, "safe_logg": [1, 7, 8, 9, 16], "safelogg": [1, 7, 9, 16, 18], "archiv": [1, 9], "download": [1, 9], "folder": [1, 9], "content": [1, 7], "from": [1, 9, 17], "contain": [1, 2, 3, 4, 9], "base64": [1, 17], "tarbal": 1, "The": [1, 9, 18], "function": [1, 6, 7, 9, 16], "i": [1, 17, 18], "design": 1, "leverag": 1, "multi": 1, "thread": [1, 9, 18], "order": 1, "maxim": 1, "speed": 1, "number": [1, 9, 17], "download_archive_part_from_pod": 1, "call": [1, 17], "made": 1, "parallel": 1, "pod": [1, 2, 3, 4], "which": [1, 9], "must": [1, 9], "where": [1, 9, 17], "temporari": [1, 9], "store": [1, 9], "delet": 1, "onc": 1, "termin": 1, "writabl": 1, "have": 1, "enough": 1, "space": 1, "temporarli": 1, "prefix": 1, "ad": 1, "local": [1, 9], "save": 1, "split": 1, "multipl": 1, "specifi": 1, "maximum": [1, 9], "launch": 1, "omit": 1, "instanti": 1, "simpli": 1, "log": [1, 17, 18], "packag": [1, 7, 18], "print": [1, 17], "stdout": 1, "filenam": [1, 9, 18], "batchv1api": 1, "bool": [1, 4, 11], "check": 1, "exist": 1, "pars": 1, "through": 1, "boolean": 1, "valu": [1, 17], "indic": 1, "whether": 1, "given": 1, "paramet": [1, 5, 6, 9, 17], "pvc": [1, 2, 3, 4], "project": [1, 4], "persist": [1, 4], "volum": [1, 2, 3, 4], "claim": [1, 4], "label_selector": 1, "all": [1, 11, 17], "watch_namespac": 1, "ar": 1, "valid": 1, "filter": 1, "match": 1, "corev1api": 1, "bodi": 1, "ani": [1, 6, 11, 17], "v1job": 1, "job": 1, "an": [1, 9, 17], "represent": 1, "manifest": 1, "note": 1, "won": 1, "t": 1, "overridden": 1, "api": [1, 9], "open": 1, "cluster": [1, 6], "manag": 1, "manifestwork": 1, "defin": 1, "group": [1, 3, 4], "hub": 1, "custom": [1, 4], "repres": [1, 9], "newli": 1, "timeout": [1, 11], "120": 1, "request": 1, "customobjectsapi": 1, "full": [1, 9], "remov": 1, "v1statu": 1, "python": 1, "client": 1, "dynamiccli": 1, "command": 1, "base_command": 1, "std_err": 1, "true": 1, "execut": 1, "its": 1, "pipe": 1, "bash": 1, "c": 1, "case": 1, "along": 1, "find": 1, "node": [1, 6], "kraken": [1, 9], "deploi": 1, "set": [1, 11, 17], "global": 1, "run": [1, 11], "found": 1, "dict": [1, 6, 9, 11], "tupl": [1, 9], "0": [1, 6, 9], "1": 1, "version": [1, 3, 4], "remote_archive_prefix": 1, "local_download_path": 1, "local_file_prefix": 1, "queue": [1, 9], "queue_siz": [1, 9], "downloaded_file_list": 1, "delete_remote_after_download": 1, "thread_numb": [1, 9], "worker": [1, 9], "create_download_multipart_arch": 1, "method": [1, 11, 17, 18], "dequeu": 1, "safe": [1, 18], "until": 1, "empti": 1, "th": 1, "tar": 1, "pop": 1, "itself": 1, "avoid": 1, "corrupt": 1, "caus": 1, "websocket": 1, "remot": 1, "thi": 1, "append": 1, "sequenti": 1, "assign": 1, "two": 1, "digit": 1, "except": [1, 4, 9, 17], "ex": 1, "like": 1, "becom": 1, "00": 1, "To": 1, "extens": 1, "b64": 1, "wil": 1, "total": [1, 9], "size": 1, "share": [1, 9], "between": [1, 9], "allow": 1, "get": [1, 9], "cloud": 1, "infrastructur": 1, "when": 1, "avail": 1, "unknown": [1, 6], "unavail": 1, "network": 1, "plugin": 1, "clustervers": 1, "statu": 1, "text": 1, "openshift": 1, "other": 1, "distribut": 1, "server": 1, "url": [1, 9], "api_vers": 1, "count": 1, "occurr": [1, 17], "kind": [1, 3, 4], "corev1": 1, "dictionari": 1, "customobject": 1, "litmuschaosobject": [1, 2, 3, 4], "type": 1, "data": [1, 4, 9, 18], "subclass": 1, "namespace_nam": 1, "node_nam": [1, 11], "instance_kill_count": 1, "activ": 1, "": [1, 17], "label": [1, 11], "krkn_lib": 1, "model": [1, 7], "telemetri": [1, 2, 7], "nodeinfo": [1, 2, 5, 6], "retriev": 1, "inform": [1, 4], "about": 1, "specif": 1, "output": 1, "abov": 1, "kubectl": 1, "doesn": 1, "httprespons": 1, "read": [1, 17], "A": 1, "capac": [1, 3, 4], "associ": 1, "fals": [1, 4], "attach": 1, "kill": 1, "selector": 1, "onli": 1, "search": 1, "readi": [1, 3, 4], "iter": 1, "component_namespac": 1, "monitor": 1, "compon": 1, "one": [1, 9], "more": 1, "otherwis": [1, 18], "v1pod": 1, "definit": 1, "managedclust": 1, "watch": 1, "resource_vers": 1, "k8": [2, 7], "submodul": [2, 7], "apirequestexcept": [2, 3, 4], "chaosengin": [2, 3, 4], "chaosresult": [2, 3, 4], "volumemount": [2, 3, 4], "chaosruntelemetri": [2, 5, 6, 9], "scenariotelemetri": [2, 5, 6, 9], "enginestatu": [3, 4], "expstatu": [3, 4], "failstep": [3, 4], "verdict": [3, 4], "imag": [3, 4], "plural": [3, 4], "podnam": [3, 4], "volumenam": [3, 4], "nodenam": [3, 4], "podip": [3, 4], "pvcname": [3, 4], "mountpath": [3, 4], "hold": 4, "regard": 4, "litmu": 4, "mount": 4, "cloud_infrastructur": [5, 6], "kubernetes_objects_count": [5, 6], "network_plugin": [5, 6], "node_count": [5, 6], "node_info": [5, 6], "run_uuid": [5, 6], "scenario": [5, 6, 17], "to_json": [5, 6], "architectur": [5, 6], "instance_typ": [5, 6], "kernel_vers": [5, 6], "kubelet_vers": [5, 6], "node_typ": [5, 6], "os_vers": [5, 6], "endtimestamp": [5, 6], "exitstatu": [5, 6], "parametersbase64": [5, 6], "starttimestamp": [5, 6], "json_object": 6, "built": 6, "alia": 6, "metadata": 6, "float": 6, "modul": 7, "subpackag": 7, "krkn_telemetri": [7, 8], "krkntelemetri": [7, 8, 9, 11, 12, 13, 15], "base_test": [7, 10], "basetest": [7, 10, 11, 12, 13, 15], "test_krkn_kubernet": [7, 10], "krknkubernetestest": [7, 10, 12], "test_krkn_telemetri": [7, 10], "krkntelemetrytest": [7, 10, 13], "test_krkn_telemetry_model": [7, 10], "krkntelemetrymodelstest": [7, 10, 14], "test_util": [7, 10], "utilfunctiontest": [7, 10, 15], "util": 7, "decode_base64_fil": [7, 16, 17], "deep_set_attribut": [7, 16, 17], "log_except": [7, 16, 17], "generate_url_and_put_to_s3_work": [8, 9], "get_bucket_url_for_filenam": [8, 9], "get_ocp_prometheus_data": [8, 9], "kubecli": [8, 9], "put_file_to_url": [8, 9], "put_ocp_prometheus_data": [8, 9], "send_telemetri": [8, 9], "set_parameters_base64": [8, 9], "lib_kubernet": 9, "request_id": 9, "api_url": 9, "usernam": 9, "password": 9, "uploaded_file_list": 9, "max_retri": 9, "s3": 9, "link": 9, "put": 9, "upload": 9, "bucket": 9, "consum": 9, "element": 9, "first": 9, "item": 9, "sequenc": 9, "second": 9, "third": 9, "retri": 9, "counter": 9, "updat": 9, "compar": 9, "uuid": 9, "session": 9, "prometheu": 9, "endpoint": 9, "gener": 9, "If": 9, "indefinit": 9, "bucket_fold": 9, "remote_filenam": 9, "shot": 9, "telemetry_config": 9, "ocp": 9, "metric": 9, "krkn": 9, "conf": 9, "section": 9, "local_filenam": 9, "archive_volum": 9, "mulithread": 9, "chaos_telemetri": 9, "alreadi": 9, "popul": 9, "scenario_telemetri": 9, "file_path": 9, "apply_templ": [10, 11], "delete_fake_kraken": [10, 11], "deploy_fake_kraken": [10, 11], "deploy_fedtool": [10, 11], "deploy_job": [10, 11], "deploy_namespac": [10, 11], "deploy_persistent_volum": [10, 11], "deploy_persistent_volume_claim": [10, 11], "get_random_str": [10, 11], "is_openshift": [10, 11], "lib_k8": [10, 11, 12, 13, 15], "lib_telemetri": [10, 11, 12, 13, 15], "setupclass": [10, 11], "teardownclass": [10, 11], "template_to_job": [10, 11], "template_to_namespac": [10, 11], "template_to_pod": [10, 11], "template_to_pv": [10, 11], "template_to_pvc": [10, 11], "wait_pod": [10, 11], "test_apply_yaml": [10, 12], "test_check_if_namespace_exist": [10, 12], "test_check_if_pod_exist": [10, 12], "test_check_if_pvc_exist": [10, 12], "test_check_namespac": [10, 12], "test_create_job": [10, 12], "test_create_pod": [10, 12], "test_delete_job": [10, 12], "test_delete_namespac": [10, 12], "test_delete_pod": [10, 12], "test_download_folder_from_pod_as_arch": [10, 12], "test_exec_command": [10, 12], "test_exists_path_in_pod": [10, 12], "test_find_kraken_nod": [10, 12], "test_get_all_kubernetes_object_count": [10, 12], "test_get_all_pod": [10, 12], "test_get_cluster_infrastructur": [10, 12], "test_get_cluster_network_plugin": [10, 12], "test_get_cluster_vers": [10, 12], "test_get_containers_in_pod": [10, 12], "test_get_job_statu": [10, 12], "test_get_kubernetes_core_objects_count": [10, 12], "test_get_kubernetes_custom_objects_count": [10, 12], "test_get_namespace_statu": [10, 12], "test_get_node_resource_vers": [10, 12], "test_get_nodes_info": [10, 12], "test_get_pod_info": [10, 12], "test_get_pod_log": [10, 12], "test_get_pvc_info": [10, 12], "test_is_pod_run": [10, 12], "test_list_killable_nod": [10, 12], "test_list_namespac": [10, 12], "test_list_nod": [10, 12], "test_list_pod": [10, 12], "test_list_ready_nod": [10, 12], "test_monitor_compon": [10, 12], "test_monitor_namespac": [10, 12], "test_monitor_nod": [10, 12], "test_read_pod": [10, 12], "test_get_bucket_url_for_filenam": [10, 13], "test_send_telemetri": [10, 13], "test_set_parameters_base_64": [10, 13], "test_upload_download_prometheu": [10, 13], "test_chaos_run_telemetri": [10, 14], "test_scenario_telemetri": [10, 14], "test_decode_base64_fil": [10, 15], "test_deep_set_attribut": [10, 15], "methodnam": [11, 12, 13, 14, 15], "runtest": [11, 12, 13, 14, 15], "testcas": [11, 14], "templat": 11, "random_label": 11, "fedtool": 11, "storage_class": 11, "length": 11, "classmethod": 11, "hook": 11, "up": 11, "fixtur": 11, "befor": 11, "deconstruct": 11, "after": 11, "60": 11, "close": [16, 18], "error": [16, 18], "info": [16, 18], "log_file_nam": [16, 18], "warn": [16, 18], "write_work": [16, 18], "source_filenam": 17, "destination_filenam": 17, "decod": 17, "while": 17, "memori": 17, "alloc": 17, "suitabl": 17, "big": 17, "convers": 17, "sourc": 17, "encod": 17, "destin": 17, "attribut": 17, "obj": 17, "recurs": 17, "present": 17, "travers": 17, "modifi": 17, "line": 17, "includ": 17, "write_mod": 18, "provid": 18, "mechan": 18, "write": 18, "mode": 18, "w": 18, "work": 18, "wrapper": 18, "around": 18, "doubl": 18, "meant": 18, "forc": 18, "depend": 18, "behav": 18, "simpl": 18, "logger": 18, "properti": 18}, "objects": {"": [[0, 0, 0, "-", "k8s"], [2, 0, 0, "-", "models"], [8, 0, 0, "-", "telemetry"], [10, 0, 0, "-", "tests"], [16, 0, 0, "-", "utils"]], "k8s": [[1, 0, 0, "-", "krkn_kubernetes"]], "k8s.krkn_kubernetes": [[1, 1, 1, "", "KrknKubernetes"]], "k8s.krkn_kubernetes.KrknKubernetes": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "api_client"], [1, 2, 1, "", "apply_yaml"], [1, 2, 1, "", "archive_and_get_path_from_pod"], [1, 3, 1, "", "batch_cli"], [1, 2, 1, "", "check_if_namespace_exists"], [1, 2, 1, "", "check_if_pod_exists"], [1, 2, 1, "", "check_if_pvc_exists"], [1, 2, 1, "", "check_namespaces"], [1, 3, 1, "", "cli"], [1, 2, 1, "", "create_job"], [1, 2, 1, "", "create_manifestwork"], [1, 2, 1, "", "create_pod"], [1, 3, 1, "", "custom_object_client"], [1, 2, 1, "", "delete_file_from_pod"], [1, 2, 1, "", "delete_job"], [1, 2, 1, "", "delete_manifestwork"], [1, 2, 1, "", "delete_namespace"], [1, 2, 1, "", "delete_pod"], [1, 3, 1, "", "dyn_client"], [1, 2, 1, "", "exec_cmd_in_pod"], [1, 2, 1, "", "find_kraken_node"], [1, 2, 1, "", "get_all_kubernetes_object_count"], [1, 2, 1, "", "get_all_pods"], [1, 2, 1, "", "get_api_resources_by_group"], [1, 2, 1, "", "get_archive_volume_from_pod_worker"], [1, 2, 1, "", "get_cluster_infrastructure"], [1, 2, 1, "", "get_cluster_network_plugins"], [1, 2, 1, "", "get_clusterversion_string"], [1, 2, 1, "", "get_containers_in_pod"], [1, 2, 1, "", "get_host"], [1, 2, 1, "", "get_job_status"], [1, 2, 1, "", "get_kubernetes_core_objects_count"], [1, 2, 1, "", "get_kubernetes_custom_objects_count"], [1, 2, 1, "", "get_litmus_chaos_object"], [1, 2, 1, "", "get_namespace_status"], [1, 2, 1, "", "get_node"], [1, 2, 1, "", "get_node_resource_version"], [1, 2, 1, "", "get_nodes_infos"], [1, 2, 1, "", "get_pod_info"], [1, 2, 1, "", "get_pod_log"], [1, 2, 1, "", "get_pvc_info"], [1, 2, 1, "", "is_pod_running"], [1, 2, 1, "", "list_killable_managedclusters"], [1, 2, 1, "", "list_killable_nodes"], [1, 2, 1, "", "list_namespaces"], [1, 2, 1, "", "list_nodes"], [1, 2, 1, "", "list_pods"], [1, 2, 1, "", "list_ready_nodes"], [1, 2, 1, "", "monitor_component"], [1, 2, 1, "", "monitor_namespace"], [1, 2, 1, "", "monitor_nodes"], [1, 2, 1, "", "path_exists_in_pod"], [1, 2, 1, "", "read_pod"], [1, 2, 1, "", "watch_managedcluster_status"], [1, 2, 1, "", "watch_node_status"], [1, 3, 1, "", "watch_resource"]], "models": [[3, 0, 0, "-", "k8s"], [5, 0, 0, "-", "telemetry"]], "models.k8s": [[4, 0, 0, "-", "models"]], "models.k8s.models": [[4, 4, 1, "", "ApiRequestException"], [4, 1, 1, "", "ChaosEngine"], [4, 1, 1, "", "ChaosResult"], [4, 1, 1, "", "Container"], [4, 1, 1, "", "LitmusChaosObject"], [4, 1, 1, "", "PVC"], [4, 1, 1, "", "Pod"], [4, 1, 1, "", "Volume"], [4, 1, 1, "", "VolumeMount"]], "models.k8s.models.ChaosEngine": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "engineStatus"], [4, 3, 1, "", "expStatus"]], "models.k8s.models.ChaosResult": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "failStep"], [4, 3, 1, "", "verdict"]], "models.k8s.models.Container": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "image"], [4, 3, 1, "", "name"], [4, 3, 1, "", "ready"], [4, 3, 1, "", "volumeMounts"]], "models.k8s.models.LitmusChaosObject": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "group"], [4, 3, 1, "", "kind"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "plural"], [4, 3, 1, "", "version"]], "models.k8s.models.PVC": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "capacity"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "podNames"], [4, 3, 1, "", "volumeName"]], "models.k8s.models.Pod": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "containers"], [4, 3, 1, "", "name"], [4, 3, 1, "", "namespace"], [4, 3, 1, "", "nodeName"], [4, 3, 1, "", "podIP"], [4, 3, 1, "", "volumes"]], "models.k8s.models.Volume": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "name"], [4, 3, 1, "", "pvcName"]], "models.k8s.models.VolumeMount": [[4, 2, 1, "", "__init__"], [4, 3, 1, "", "mountPath"], [4, 3, 1, "", "name"]], "models.telemetry": [[6, 0, 0, "-", "models"]], "models.telemetry.models": [[6, 1, 1, "", "ChaosRunTelemetry"], [6, 1, 1, "", "NodeInfo"], [6, 1, 1, "", "ScenarioTelemetry"]], "models.telemetry.models.ChaosRunTelemetry": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "cloud_infrastructure"], [6, 3, 1, "", "kubernetes_objects_count"], [6, 3, 1, "", "network_plugins"], [6, 3, 1, "", "node_count"], [6, 3, 1, "", "node_infos"], [6, 3, 1, "", "run_uuid"], [6, 3, 1, "", "scenarios"], [6, 2, 1, "", "to_json"]], "models.telemetry.models.NodeInfo": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "architecture"], [6, 3, 1, "", "instance_type"], [6, 3, 1, "", "kernel_version"], [6, 3, 1, "", "kubelet_version"], [6, 3, 1, "", "node_type"], [6, 3, 1, "", "os_version"]], "models.telemetry.models.ScenarioTelemetry": [[6, 2, 1, "", "__init__"], [6, 3, 1, "", "endTimeStamp"], [6, 3, 1, "", "exitStatus"], [6, 3, 1, "", "parameters"], [6, 3, 1, "", "parametersBase64"], [6, 3, 1, "", "scenario"], [6, 3, 1, "", "startTimeStamp"]], "telemetry": [[9, 0, 0, "-", "krkn_telemetry"]], "telemetry.krkn_telemetry": [[9, 1, 1, "", "KrknTelemetry"]], "telemetry.krkn_telemetry.KrknTelemetry": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "generate_url_and_put_to_s3_worker"], [9, 2, 1, "", "get_bucket_url_for_filename"], [9, 2, 1, "", "get_ocp_prometheus_data"], [9, 3, 1, "", "kubecli"], [9, 2, 1, "", "put_file_to_url"], [9, 2, 1, "", "put_ocp_prometheus_data"], [9, 3, 1, "", "safe_logger"], [9, 2, 1, "", "send_telemetry"], [9, 2, 1, "", "set_parameters_base64"]], "tests": [[11, 0, 0, "-", "base_test"], [12, 0, 0, "-", "test_krkn_kubernetes"], [13, 0, 0, "-", "test_krkn_telemetry"], [14, 0, 0, "-", "test_krkn_telemetry_models"], [15, 0, 0, "-", "test_utils"]], "tests.base_test": [[11, 1, 1, "", "BaseTest"]], "tests.base_test.BaseTest": [[11, 2, 1, "", "apply_template"], [11, 2, 1, "", "delete_fake_kraken"], [11, 2, 1, "", "deploy_fake_kraken"], [11, 2, 1, "", "deploy_fedtools"], [11, 2, 1, "", "deploy_job"], [11, 2, 1, "", "deploy_namespace"], [11, 2, 1, "", "deploy_persistent_volume"], [11, 2, 1, "", "deploy_persistent_volume_claim"], [11, 2, 1, "", "get_random_string"], [11, 2, 1, "", "is_openshift"], [11, 3, 1, "", "lib_k8s"], [11, 3, 1, "", "lib_telemetry"], [11, 2, 1, "", "setUpClass"], [11, 2, 1, "", "tearDownClass"], [11, 2, 1, "", "template_to_job"], [11, 2, 1, "", "template_to_namespace"], [11, 2, 1, "", "template_to_pod"], [11, 2, 1, "", "template_to_pv"], [11, 2, 1, "", "template_to_pvc"], [11, 2, 1, "", "wait_pod"]], "tests.test_krkn_kubernetes": [[12, 1, 1, "", "KrknKubernetesTests"]], "tests.test_krkn_kubernetes.KrknKubernetesTests": [[12, 3, 1, "", "lib_k8s"], [12, 3, 1, "", "lib_telemetry"], [12, 2, 1, "", "test_apply_yaml"], [12, 2, 1, "", "test_check_if_namespace_exists"], [12, 2, 1, "", "test_check_if_pod_exists"], [12, 2, 1, "", "test_check_if_pvc_exists"], [12, 2, 1, "", "test_check_namespaces"], [12, 2, 1, "", "test_create_job"], [12, 2, 1, "", "test_create_pod"], [12, 2, 1, "", "test_delete_job"], [12, 2, 1, "", "test_delete_namespace"], [12, 2, 1, "", "test_delete_pod"], [12, 2, 1, "", "test_download_folder_from_pod_as_archive"], [12, 2, 1, "", "test_exec_command"], [12, 2, 1, "", "test_exists_path_in_pod"], [12, 2, 1, "", "test_find_kraken_node"], [12, 2, 1, "", "test_get_all_kubernetes_object_count"], [12, 2, 1, "", "test_get_all_pods"], [12, 2, 1, "", "test_get_cluster_infrastructure"], [12, 2, 1, "", "test_get_cluster_network_plugins"], [12, 2, 1, "", "test_get_cluster_version"], [12, 2, 1, "", "test_get_containers_in_pod"], [12, 2, 1, "", "test_get_job_status"], [12, 2, 1, "", "test_get_kubernetes_core_objects_count"], [12, 2, 1, "", "test_get_kubernetes_custom_objects_count"], [12, 2, 1, "", "test_get_namespace_status"], [12, 2, 1, "", "test_get_node_resource_version"], [12, 2, 1, "", "test_get_nodes_infos"], [12, 2, 1, "", "test_get_pod_info"], [12, 2, 1, "", "test_get_pod_log"], [12, 2, 1, "", "test_get_pvc_info"], [12, 2, 1, "", "test_is_pod_running"], [12, 2, 1, "", "test_list_killable_nodes"], [12, 2, 1, "", "test_list_namespaces"], [12, 2, 1, "", "test_list_nodes"], [12, 2, 1, "", "test_list_pods"], [12, 2, 1, "", "test_list_ready_nodes"], [12, 2, 1, "", "test_monitor_component"], [12, 2, 1, "", "test_monitor_namespace"], [12, 2, 1, "", "test_monitor_nodes"], [12, 2, 1, "", "test_read_pod"]], "tests.test_krkn_telemetry": [[13, 1, 1, "", "KrknTelemetryTests"]], "tests.test_krkn_telemetry.KrknTelemetryTests": [[13, 3, 1, "", "lib_k8s"], [13, 3, 1, "", "lib_telemetry"], [13, 2, 1, "", "test_get_bucket_url_for_filename"], [13, 2, 1, "", "test_send_telemetry"], [13, 2, 1, "", "test_set_parameters_base_64"], [13, 2, 1, "", "test_upload_download_prometheus"]], "tests.test_krkn_telemetry_models": [[14, 1, 1, "", "KrknTelemetryModelsTests"]], "tests.test_krkn_telemetry_models.KrknTelemetryModelsTests": [[14, 2, 1, "", "test_chaos_run_telemetry"], [14, 2, 1, "", "test_scenario_telemetry"]], "tests.test_utils": [[15, 1, 1, "", "UtilFunctionTests"]], "tests.test_utils.UtilFunctionTests": [[15, 3, 1, "", "lib_k8s"], [15, 3, 1, "", "lib_telemetry"], [15, 2, 1, "", "test_decode_base64_file"], [15, 2, 1, "", "test_deep_set_attribute"]], "utils": [[17, 0, 0, "-", "functions"], [18, 0, 0, "-", "safe_logger"]], "utils.functions": [[17, 5, 1, "", "decode_base64_file"], [17, 5, 1, "", "deep_set_attribute"], [17, 5, 1, "", "log_exception"]], "utils.safe_logger": [[18, 1, 1, "", "SafeLogger"]], "utils.safe_logger.SafeLogger": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "close"], [18, 2, 1, "", "error"], [18, 2, 1, "", "info"], [18, 6, 1, "", "log_file_name"], [18, 2, 1, "", "warning"], [18, 2, 1, "", "write_worker"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"k8": [0, 1, 3, 4], "packag": [0, 2, 3, 5, 8, 10, 16], "submodul": [0, 3, 5, 8, 10, 16], "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "content": [0, 2, 3, 5, 8, 10, 16], "krkn_kubernet": 1, "model": [2, 3, 4, 5, 6], "subpackag": 2, "telemetri": [5, 6, 8, 9], "krkn": 7, "foundat": 7, "librari": 7, "krkn_telemetri": 9, "test": [10, 11, 12, 13, 14, 15], "base_test": 11, "test_krkn_kubernet": 12, "test_krkn_telemetri": 13, "test_krkn_telemetry_model": 14, "test_util": 15, "util": [16, 17, 18], "function": 17, "safe_logg": 18}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"k8s package": [[0, "k8s-package"]], "Submodules": [[0, "submodules"], [3, "submodules"], [5, "submodules"], [8, "submodules"], [10, "submodules"], [16, "submodules"]], "Module contents": [[0, "module-k8s"], [2, "module-models"], [3, "module-models.k8s"], [5, "module-models.telemetry"], [8, "module-telemetry"], [10, "module-tests"], [16, "module-utils"]], "k8s.krkn_kubernetes module": [[1, "module-k8s.krkn_kubernetes"]], "models package": [[2, "models-package"]], "Subpackages": [[2, "subpackages"]], "models.k8s package": [[3, "models-k8s-package"]], "models.k8s.models module": [[4, "module-models.k8s.models"]], "models.telemetry package": [[5, "models-telemetry-package"]], "models.telemetry.models module": [[6, "module-models.telemetry.models"]], "Krkn Foundation Library": [[7, "krkn-foundation-library"]], "telemetry package": [[8, "telemetry-package"]], "telemetry.krkn_telemetry module": [[9, "module-telemetry.krkn_telemetry"]], "tests package": [[10, "tests-package"]], "tests.base_test module": [[11, "module-tests.base_test"]], "tests.test_krkn_kubernetes module": [[12, "module-tests.test_krkn_kubernetes"]], "tests.test_krkn_telemetry module": [[13, "module-tests.test_krkn_telemetry"]], "tests.test_krkn_telemetry_models module": [[14, "module-tests.test_krkn_telemetry_models"]], "tests.test_utils module": [[15, "module-tests.test_utils"]], "utils package": [[16, "utils-package"]], "utils.functions module": [[17, "module-utils.functions"]], "utils.safe_logger module": [[18, "module-utils.safe_logger"]]}, "indexentries": {"k8s": [[0, "module-k8s"]], "module": [[0, "module-k8s"], [1, "module-k8s.krkn_kubernetes"], [2, "module-models"], [3, "module-models.k8s"], [4, "module-models.k8s.models"], [5, "module-models.telemetry"], [6, "module-models.telemetry.models"], [8, "module-telemetry"], [9, "module-telemetry.krkn_telemetry"], [10, "module-tests"], [11, "module-tests.base_test"], [12, "module-tests.test_krkn_kubernetes"], [13, "module-tests.test_krkn_telemetry"], [14, "module-tests.test_krkn_telemetry_models"], [15, "module-tests.test_utils"], [16, "module-utils"], [17, "module-utils.functions"], [18, "module-utils.safe_logger"]], "krknkubernetes (class in k8s.krkn_kubernetes)": [[1, "k8s.krkn_kubernetes.KrknKubernetes"]], "__init__() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.__init__"]], "api_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.api_client"]], "apply_yaml() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.apply_yaml"]], "archive_and_get_path_from_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.archive_and_get_path_from_pod"]], "batch_cli (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.batch_cli"]], "check_if_namespace_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_namespace_exists"]], "check_if_pod_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_pod_exists"]], "check_if_pvc_exists() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_if_pvc_exists"]], "check_namespaces() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.check_namespaces"]], "cli (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.cli"]], "create_job() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_job"]], "create_manifestwork() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_manifestwork"]], "create_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.create_pod"]], "custom_object_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.custom_object_client"]], "delete_file_from_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_file_from_pod"]], "delete_job() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_job"]], "delete_manifestwork() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_manifestwork"]], "delete_namespace() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_namespace"]], "delete_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.delete_pod"]], "dyn_client (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.dyn_client"]], "exec_cmd_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.exec_cmd_in_pod"]], "find_kraken_node() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.find_kraken_node"]], "get_all_kubernetes_object_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_kubernetes_object_count"]], "get_all_pods() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_all_pods"]], "get_api_resources_by_group() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_api_resources_by_group"]], "get_archive_volume_from_pod_worker() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_archive_volume_from_pod_worker"]], "get_cluster_infrastructure() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_cluster_infrastructure"]], "get_cluster_network_plugins() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_cluster_network_plugins"]], "get_clusterversion_string() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_clusterversion_string"]], "get_containers_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_containers_in_pod"]], "get_host() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_host"]], "get_job_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_job_status"]], "get_kubernetes_core_objects_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_kubernetes_core_objects_count"]], "get_kubernetes_custom_objects_count() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_kubernetes_custom_objects_count"]], "get_litmus_chaos_object() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_litmus_chaos_object"]], "get_namespace_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_namespace_status"]], "get_node() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_node"]], "get_node_resource_version() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_node_resource_version"]], "get_nodes_infos() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_nodes_infos"]], "get_pod_info() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pod_info"]], "get_pod_log() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pod_log"]], "get_pvc_info() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.get_pvc_info"]], "is_pod_running() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.is_pod_running"]], "k8s.krkn_kubernetes": [[1, "module-k8s.krkn_kubernetes"]], "list_killable_managedclusters() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_killable_managedclusters"]], "list_killable_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_killable_nodes"]], "list_namespaces() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_namespaces"]], "list_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_nodes"]], "list_pods() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_pods"]], "list_ready_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.list_ready_nodes"]], "monitor_component() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_component"]], "monitor_namespace() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_namespace"]], "monitor_nodes() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.monitor_nodes"]], "path_exists_in_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.path_exists_in_pod"]], "read_pod() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.read_pod"]], "watch_managedcluster_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_managedcluster_status"]], "watch_node_status() (k8s.krkn_kubernetes.krknkubernetes method)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_node_status"]], "watch_resource (k8s.krkn_kubernetes.krknkubernetes attribute)": [[1, "k8s.krkn_kubernetes.KrknKubernetes.watch_resource"]], "models": [[2, "module-models"]], "models.k8s": [[3, "module-models.k8s"]], "apirequestexception": [[4, "models.k8s.models.ApiRequestException"]], "chaosengine (class in models.k8s.models)": [[4, "models.k8s.models.ChaosEngine"]], "chaosresult (class in models.k8s.models)": [[4, "models.k8s.models.ChaosResult"]], "container (class in models.k8s.models)": [[4, "models.k8s.models.Container"]], "litmuschaosobject (class in models.k8s.models)": [[4, "models.k8s.models.LitmusChaosObject"]], "pvc (class in models.k8s.models)": [[4, "models.k8s.models.PVC"]], "pod (class in models.k8s.models)": [[4, "models.k8s.models.Pod"]], "volume (class in models.k8s.models)": [[4, "models.k8s.models.Volume"]], "volumemount (class in models.k8s.models)": [[4, "models.k8s.models.VolumeMount"]], "__init__() (models.k8s.models.chaosengine method)": [[4, "models.k8s.models.ChaosEngine.__init__"]], "__init__() (models.k8s.models.chaosresult method)": [[4, "models.k8s.models.ChaosResult.__init__"]], "__init__() (models.k8s.models.container method)": [[4, "models.k8s.models.Container.__init__"]], "__init__() (models.k8s.models.litmuschaosobject method)": [[4, "models.k8s.models.LitmusChaosObject.__init__"]], "__init__() (models.k8s.models.pvc method)": [[4, "models.k8s.models.PVC.__init__"]], "__init__() (models.k8s.models.pod method)": [[4, "models.k8s.models.Pod.__init__"]], "__init__() (models.k8s.models.volume method)": [[4, "models.k8s.models.Volume.__init__"]], "__init__() (models.k8s.models.volumemount method)": [[4, "models.k8s.models.VolumeMount.__init__"]], "capacity (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.capacity"]], "containers (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.containers"]], "enginestatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.engineStatus"]], "expstatus (models.k8s.models.chaosengine attribute)": [[4, "models.k8s.models.ChaosEngine.expStatus"]], "failstep (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.failStep"]], "group (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.group"]], "image (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.image"]], "kind (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.kind"]], "models.k8s.models": [[4, "module-models.k8s.models"]], "mountpath (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.mountPath"]], "name (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.name"]], "name (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.name"]], "name (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.name"]], "name (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.name"]], "name (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.name"]], "name (models.k8s.models.volumemount attribute)": [[4, "models.k8s.models.VolumeMount.name"]], "namespace (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.namespace"]], "namespace (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.namespace"]], "namespace (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.namespace"]], "nodename (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.nodeName"]], "plural (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.plural"]], "podip (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.podIP"]], "podnames (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.podNames"]], "pvcname (models.k8s.models.volume attribute)": [[4, "models.k8s.models.Volume.pvcName"]], "ready (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.ready"]], "verdict (models.k8s.models.chaosresult attribute)": [[4, "models.k8s.models.ChaosResult.verdict"]], "version (models.k8s.models.litmuschaosobject attribute)": [[4, "models.k8s.models.LitmusChaosObject.version"]], "volumemounts (models.k8s.models.container attribute)": [[4, "models.k8s.models.Container.volumeMounts"]], "volumename (models.k8s.models.pvc attribute)": [[4, "models.k8s.models.PVC.volumeName"]], "volumes (models.k8s.models.pod attribute)": [[4, "models.k8s.models.Pod.volumes"]], "models.telemetry": [[5, "module-models.telemetry"]], "chaosruntelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ChaosRunTelemetry"]], "nodeinfo (class in models.telemetry.models)": [[6, "models.telemetry.models.NodeInfo"]], "scenariotelemetry (class in models.telemetry.models)": [[6, "models.telemetry.models.ScenarioTelemetry"]], "__init__() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.__init__"]], "__init__() (models.telemetry.models.nodeinfo method)": [[6, "models.telemetry.models.NodeInfo.__init__"]], "__init__() (models.telemetry.models.scenariotelemetry method)": [[6, "models.telemetry.models.ScenarioTelemetry.__init__"]], "architecture (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.architecture"]], "cloud_infrastructure (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.cloud_infrastructure"]], "endtimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.endTimeStamp"]], "exitstatus (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.exitStatus"]], "instance_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.instance_type"]], "kernel_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kernel_version"]], "kubelet_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.kubelet_version"]], "kubernetes_objects_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.kubernetes_objects_count"]], "models.telemetry.models": [[6, "module-models.telemetry.models"]], "network_plugins (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.network_plugins"]], "node_count (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_count"]], "node_infos (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.node_infos"]], "node_type (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.node_type"]], "os_version (models.telemetry.models.nodeinfo attribute)": [[6, "models.telemetry.models.NodeInfo.os_version"]], "parameters (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parameters"]], "parametersbase64 (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.parametersBase64"]], "run_uuid (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.run_uuid"]], "scenario (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.scenario"]], "scenarios (models.telemetry.models.chaosruntelemetry attribute)": [[6, "models.telemetry.models.ChaosRunTelemetry.scenarios"]], "starttimestamp (models.telemetry.models.scenariotelemetry attribute)": [[6, "models.telemetry.models.ScenarioTelemetry.startTimeStamp"]], "to_json() (models.telemetry.models.chaosruntelemetry method)": [[6, "models.telemetry.models.ChaosRunTelemetry.to_json"]], "telemetry": [[8, "module-telemetry"]], "krkntelemetry (class in telemetry.krkn_telemetry)": [[9, "telemetry.krkn_telemetry.KrknTelemetry"]], "__init__() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.__init__"]], "generate_url_and_put_to_s3_worker() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.generate_url_and_put_to_s3_worker"]], "get_bucket_url_for_filename() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.get_bucket_url_for_filename"]], "get_ocp_prometheus_data() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.get_ocp_prometheus_data"]], "kubecli (telemetry.krkn_telemetry.krkntelemetry attribute)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.kubecli"]], "put_file_to_url() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.put_file_to_url"]], "put_ocp_prometheus_data() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.put_ocp_prometheus_data"]], "safe_logger (telemetry.krkn_telemetry.krkntelemetry attribute)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.safe_logger"]], "send_telemetry() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.send_telemetry"]], "set_parameters_base64() (telemetry.krkn_telemetry.krkntelemetry method)": [[9, "telemetry.krkn_telemetry.KrknTelemetry.set_parameters_base64"]], "telemetry.krkn_telemetry": [[9, "module-telemetry.krkn_telemetry"]], "tests": [[10, "module-tests"]], "basetest (class in tests.base_test)": [[11, "tests.base_test.BaseTest"]], "apply_template() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.apply_template"]], "delete_fake_kraken() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.delete_fake_kraken"]], "deploy_fake_kraken() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_fake_kraken"]], "deploy_fedtools() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_fedtools"]], "deploy_job() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_job"]], "deploy_namespace() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_namespace"]], "deploy_persistent_volume() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_persistent_volume"]], "deploy_persistent_volume_claim() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.deploy_persistent_volume_claim"]], "get_random_string() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.get_random_string"]], "is_openshift() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.is_openshift"]], "lib_k8s (tests.base_test.basetest attribute)": [[11, "tests.base_test.BaseTest.lib_k8s"]], "lib_telemetry (tests.base_test.basetest attribute)": [[11, "tests.base_test.BaseTest.lib_telemetry"]], "setupclass() (tests.base_test.basetest class method)": [[11, "tests.base_test.BaseTest.setUpClass"]], "teardownclass() (tests.base_test.basetest class method)": [[11, "tests.base_test.BaseTest.tearDownClass"]], "template_to_job() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.template_to_job"]], "template_to_namespace() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.template_to_namespace"]], "template_to_pod() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.template_to_pod"]], "template_to_pv() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.template_to_pv"]], "template_to_pvc() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.template_to_pvc"]], "tests.base_test": [[11, "module-tests.base_test"]], "wait_pod() (tests.base_test.basetest method)": [[11, "tests.base_test.BaseTest.wait_pod"]], "krknkubernetestests (class in tests.test_krkn_kubernetes)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests"]], "lib_k8s (tests.test_krkn_kubernetes.krknkubernetestests attribute)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.lib_k8s"]], "lib_telemetry (tests.test_krkn_kubernetes.krknkubernetestests attribute)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.lib_telemetry"]], "test_apply_yaml() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_apply_yaml"]], "test_check_if_namespace_exists() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_check_if_namespace_exists"]], "test_check_if_pod_exists() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_check_if_pod_exists"]], "test_check_if_pvc_exists() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_check_if_pvc_exists"]], "test_check_namespaces() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_check_namespaces"]], "test_create_job() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_create_job"]], "test_create_pod() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_create_pod"]], "test_delete_job() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_delete_job"]], "test_delete_namespace() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_delete_namespace"]], "test_delete_pod() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_delete_pod"]], "test_download_folder_from_pod_as_archive() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_download_folder_from_pod_as_archive"]], "test_exec_command() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_exec_command"]], "test_exists_path_in_pod() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_exists_path_in_pod"]], "test_find_kraken_node() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_find_kraken_node"]], "test_get_all_kubernetes_object_count() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_all_kubernetes_object_count"]], "test_get_all_pods() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_all_pods"]], "test_get_cluster_infrastructure() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_cluster_infrastructure"]], "test_get_cluster_network_plugins() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_cluster_network_plugins"]], "test_get_cluster_version() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_cluster_version"]], "test_get_containers_in_pod() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_containers_in_pod"]], "test_get_job_status() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_job_status"]], "test_get_kubernetes_core_objects_count() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_kubernetes_core_objects_count"]], "test_get_kubernetes_custom_objects_count() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_kubernetes_custom_objects_count"]], "test_get_namespace_status() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_namespace_status"]], "test_get_node_resource_version() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_node_resource_version"]], "test_get_nodes_infos() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_nodes_infos"]], "test_get_pod_info() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_pod_info"]], "test_get_pod_log() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_pod_log"]], "test_get_pvc_info() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_get_pvc_info"]], "test_is_pod_running() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_is_pod_running"]], "test_list_killable_nodes() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_list_killable_nodes"]], "test_list_namespaces() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_list_namespaces"]], "test_list_nodes() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_list_nodes"]], "test_list_pods() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_list_pods"]], "test_list_ready_nodes() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_list_ready_nodes"]], "test_monitor_component() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_monitor_component"]], "test_monitor_namespace() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_monitor_namespace"]], "test_monitor_nodes() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_monitor_nodes"]], "test_read_pod() (tests.test_krkn_kubernetes.krknkubernetestests method)": [[12, "tests.test_krkn_kubernetes.KrknKubernetesTests.test_read_pod"]], "tests.test_krkn_kubernetes": [[12, "module-tests.test_krkn_kubernetes"]], "krkntelemetrytests (class in tests.test_krkn_telemetry)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests"]], "lib_k8s (tests.test_krkn_telemetry.krkntelemetrytests attribute)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.lib_k8s"]], "lib_telemetry (tests.test_krkn_telemetry.krkntelemetrytests attribute)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.lib_telemetry"]], "test_get_bucket_url_for_filename() (tests.test_krkn_telemetry.krkntelemetrytests method)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.test_get_bucket_url_for_filename"]], "test_send_telemetry() (tests.test_krkn_telemetry.krkntelemetrytests method)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.test_send_telemetry"]], "test_set_parameters_base_64() (tests.test_krkn_telemetry.krkntelemetrytests method)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.test_set_parameters_base_64"]], "test_upload_download_prometheus() (tests.test_krkn_telemetry.krkntelemetrytests method)": [[13, "tests.test_krkn_telemetry.KrknTelemetryTests.test_upload_download_prometheus"]], "tests.test_krkn_telemetry": [[13, "module-tests.test_krkn_telemetry"]], "krkntelemetrymodelstests (class in tests.test_krkn_telemetry_models)": [[14, "tests.test_krkn_telemetry_models.KrknTelemetryModelsTests"]], "test_chaos_run_telemetry() (tests.test_krkn_telemetry_models.krkntelemetrymodelstests method)": [[14, "tests.test_krkn_telemetry_models.KrknTelemetryModelsTests.test_chaos_run_telemetry"]], "test_scenario_telemetry() (tests.test_krkn_telemetry_models.krkntelemetrymodelstests method)": [[14, "tests.test_krkn_telemetry_models.KrknTelemetryModelsTests.test_scenario_telemetry"]], "tests.test_krkn_telemetry_models": [[14, "module-tests.test_krkn_telemetry_models"]], "utilfunctiontests (class in tests.test_utils)": [[15, "tests.test_utils.UtilFunctionTests"]], "lib_k8s (tests.test_utils.utilfunctiontests attribute)": [[15, "tests.test_utils.UtilFunctionTests.lib_k8s"]], "lib_telemetry (tests.test_utils.utilfunctiontests attribute)": [[15, "tests.test_utils.UtilFunctionTests.lib_telemetry"]], "test_decode_base64_file() (tests.test_utils.utilfunctiontests method)": [[15, "tests.test_utils.UtilFunctionTests.test_decode_base64_file"]], "test_deep_set_attribute() (tests.test_utils.utilfunctiontests method)": [[15, "tests.test_utils.UtilFunctionTests.test_deep_set_attribute"]], "tests.test_utils": [[15, "module-tests.test_utils"]], "utils": [[16, "module-utils"]], "decode_base64_file() (in module utils.functions)": [[17, "utils.functions.decode_base64_file"]], "deep_set_attribute() (in module utils.functions)": [[17, "utils.functions.deep_set_attribute"]], "log_exception() (in module utils.functions)": [[17, "utils.functions.log_exception"]], "utils.functions": [[17, "module-utils.functions"]], "safelogger (class in utils.safe_logger)": [[18, "utils.safe_logger.SafeLogger"]], "__init__() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.__init__"]], "close() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.close"]], "error() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.error"]], "info() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.info"]], "log_file_name (utils.safe_logger.safelogger property)": [[18, "utils.safe_logger.SafeLogger.log_file_name"]], "utils.safe_logger": [[18, "module-utils.safe_logger"]], "warning() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.warning"]], "write_worker() (utils.safe_logger.safelogger method)": [[18, "utils.safe_logger.SafeLogger.write_worker"]]}})